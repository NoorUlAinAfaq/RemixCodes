{
	"id": "b97e77370c65e769a120cca201150097",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/erc201.sol": {
				"content": "// contracts/[Blank].sol\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.17;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\n\r\ncontract Blank is ERC20Capped, ERC20Burnable {\r\n    address payable public owner;\r\n    uint256 public blockReward;\r\n\r\n    constructor(uint256 cap, uint256 reward) ERC20('Name', 'Symbol') ERC20Capped(cap * (10 ** decimals())) {\r\n        owner = payable(msg.sender);\r\n        _mint(owner, 1000 * (10 ** decimals()));\r\n        blockReward = reward * (10 ** decimals());\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal virtual override(ERC20Capped, ERC20) {\r\n        require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\r\n        super._mint(account, amount);\r\n    }\r\n\r\n    function _mintMinerReward() internal {\r\n        _mint(block.coinbase, blockReward);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual override {\r\n        if(from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap()) {\r\n            _mintMinerReward();\r\n        }\r\n        super._beforeTokenTransfer(from, to, value);\r\n    }\r\n\r\n    function setBlockReward(uint256 reward) public onlyOwner {\r\n        blockReward = reward * (10 ** decimals());\r\n    }\r\n\r\n   \r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"contracts/erc201.sol": {
				"Blank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "setBlockReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/erc201.sol\":457:1772  contract Blank is ERC20Capped, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/erc201.sol\":579:830  constructor(uint256 cap, uint256 reward) ERC20('Name', 'Symbol') ERC20Capped(cap * (10 ** decimals())) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/erc201.sol\":663:679  10 ** decimals() */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n    /* \"contracts/erc201.sol\":663:665  10 */\n  0x0a\n    /* \"contracts/erc201.sol\":663:679  10 ** decimals() */\n  tag_8\n  jump\t// in\ntag_7:\n    /* \"contracts/erc201.sol\":656:680  cap * (10 ** decimals()) */\n  tag_9\n  swap1\n    /* \"contracts/erc201.sol\":656:659  cap */\n  dup4\n    /* \"contracts/erc201.sol\":656:680  cap * (10 ** decimals()) */\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x4e616d65)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd2, 0x14de5b589bdb)\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_16\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_15\n  jump\t// in\ntag_16:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":491:492  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":484:488  cap_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":484:492  cap_ > 0 */\n  gt\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":476:518  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4875:4877   */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":476:518  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4857:4878   */\n  mstore\n    /* \"#utility.yul\":4914:4916   */\n  0x15\n    /* \"#utility.yul\":4894:4912   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4887:4917   */\n  mstore\n    /* \"#utility.yul\":4953:4976   */\n  0x45524332304361707065643a2063617020697320300000000000000000000000\n    /* \"#utility.yul\":4933:4951   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4926:4977   */\n  mstore\n    /* \"#utility.yul\":4994:5012   */\n  0x64\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":476:518  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":528:532  _cap */\n  0x05\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":528:539  _cap = cap_ */\n  sstore\n    /* \"contracts/erc201.sol\":693:698  owner */\n  0x06\n    /* \"contracts/erc201.sol\":693:720  owner = payable(msg.sender) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/erc201.sol\":709:719  msg.sender */\n  caller\n    /* \"contracts/erc201.sol\":693:720  owner = payable(msg.sender) */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/erc201.sol\":731:770  _mint(owner, 1000 * (10 ** decimals())) */\n  tag_22\n  swap1\n    /* \"contracts/erc201.sol\":758:768  decimals() */\n  tag_23\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n  jump\n    /* \"contracts/erc201.sol\":758:768  decimals() */\ntag_23:\n    /* \"contracts/erc201.sol\":752:768  10 ** decimals() */\n  tag_24\n  swap1\n    /* \"contracts/erc201.sol\":752:754  10 */\n  0x0a\n    /* \"contracts/erc201.sol\":752:768  10 ** decimals() */\n  tag_8\n  jump\t// in\ntag_24:\n    /* \"contracts/erc201.sol\":744:769  1000 * (10 ** decimals()) */\n  tag_25\n  swap1\n    /* \"contracts/erc201.sol\":744:748  1000 */\n  0x03e8\n    /* \"contracts/erc201.sol\":744:769  1000 * (10 ** decimals()) */\n  tag_10\n  jump\t// in\ntag_25:\n    /* \"contracts/erc201.sol\":731:736  _mint */\n  tag_26\n    /* \"contracts/erc201.sol\":731:770  _mint(owner, 1000 * (10 ** decimals())) */\n  jump\t// in\ntag_22:\n    /* \"contracts/erc201.sol\":805:821  10 ** decimals() */\n  tag_28\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n    /* \"contracts/erc201.sol\":805:807  10 */\n  0x0a\n    /* \"contracts/erc201.sol\":805:821  10 ** decimals() */\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"contracts/erc201.sol\":795:822  reward * (10 ** decimals()) */\n  tag_29\n  swap1\n    /* \"contracts/erc201.sol\":795:801  reward */\n  dup3\n    /* \"contracts/erc201.sol\":795:822  reward * (10 ** decimals()) */\n  tag_10\n  jump\t// in\ntag_29:\n    /* \"contracts/erc201.sol\":781:792  blockReward */\n  0x07\n    /* \"contracts/erc201.sol\":781:822  blockReward = reward * (10 ** decimals()) */\n  sstore\n  pop\n    /* \"contracts/erc201.sol\":457:1772  contract Blank is ERC20Capped, ERC20Burnable {... */\n  tag_89\n  swap1\n  pop\n  jump\n    /* \"contracts/erc201.sol\":838:1065  function _mint(address account, uint256 amount) internal virtual override(ERC20Capped, ERC20) {... */\ntag_26:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n  sload(0x05)\n    /* \"contracts/erc201.sol\":973:979  amount */\n  dup2\n    /* \"contracts/erc201.sol\":951:970  ERC20.totalSupply() */\n  tag_35\n    /* \"contracts/erc201.sol\":951:968  ERC20.totalSupply */\n  or(tag_0_38, shl(0x20, tag_36))\n    /* \"contracts/erc201.sol\":951:970  ERC20.totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"contracts/erc201.sol\":951:979  ERC20.totalSupply() + amount */\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"contracts/erc201.sol\":951:988  ERC20.totalSupply() + amount <= cap() */\n  gt\n  iszero\n    /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n  tag_39\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5355:5357   */\n  0x20\n    /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5337:5358   */\n  mstore\n    /* \"#utility.yul\":5394:5396   */\n  0x19\n    /* \"#utility.yul\":5374:5392   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5367:5397   */\n  mstore\n    /* \"#utility.yul\":5433:5460   */\n  0x45524332304361707065643a2063617020657863656564656400000000000000\n    /* \"#utility.yul\":5413:5431   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5406:5461   */\n  mstore\n    /* \"#utility.yul\":5478:5496   */\n  0x64\n  add\n    /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n  tag_19\n    /* \"#utility.yul\":5153:5502   */\n  jump\n    /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\ntag_39:\n    /* \"contracts/erc201.sol\":1029:1057  super._mint(account, amount) */\n  tag_42\n    /* \"contracts/erc201.sol\":1041:1048  account */\n  dup3\n    /* \"contracts/erc201.sol\":1050:1056  amount */\n  dup3\n    /* \"contracts/erc201.sol\":1029:1040  super._mint */\n  or(tag_0_91, shl(0x20, tag_43))\n    /* \"contracts/erc201.sol\":1029:1057  super._mint(account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"contracts/erc201.sol\":838:1065  function _mint(address account, uint256 amount) internal virtual override(ERC20Capped, ERC20) {... */\n  pop\n  pop\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\ntag_36:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n  sload(0x02)\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":759:963  function _mint(address account, uint256 amount) internal virtual override {... */\ntag_43:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n  sload(0x05)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":873:879  amount */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:870  ERC20.totalSupply() */\n  tag_48\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:868  ERC20.totalSupply */\n  or(tag_0_38, shl(0x20, tag_36))\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:870  ERC20.totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:879  ERC20.totalSupply() + amount */\n  tag_49\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_49:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:888  ERC20.totalSupply() + amount <= cap() */\n  gt\n  iszero\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n  tag_50\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5355:5357   */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5337:5358   */\n  mstore\n    /* \"#utility.yul\":5394:5396   */\n  0x19\n    /* \"#utility.yul\":5374:5392   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5367:5397   */\n  mstore\n    /* \"#utility.yul\":5433:5460   */\n  0x45524332304361707065643a2063617020657863656564656400000000000000\n    /* \"#utility.yul\":5413:5431   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5406:5461   */\n  mstore\n    /* \"#utility.yul\":5478:5496   */\n  0x64\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n  tag_19\n    /* \"#utility.yul\":5153:5502   */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\ntag_50:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":928:956  super._mint(account, amount) */\n  tag_42\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":940:947  account */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":949:955  amount */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":928:939  super._mint */\n  or(tag_0_92, shl(0x20, tag_53))\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":928:956  super._mint(account, amount) */\n  0x20\n  shr\n  jump\t// in\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_53:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_55\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5709:5711   */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5691:5712   */\n  mstore\n    /* \"#utility.yul\":5748:5750   */\n  0x1f\n    /* \"#utility.yul\":5728:5746   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5721:5751   */\n  mstore\n    /* \"#utility.yul\":5787:5820   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":5767:5785   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5760:5821   */\n  mstore\n    /* \"#utility.yul\":5838:5856   */\n  0x64\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_19\n    /* \"#utility.yul\":5507:5862   */\n  jump\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_55:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  tag_58\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n  tag_59\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_58:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_60\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_60:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":6013:6038   */\n  dup5\n  dup2\n  mstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5986:6004   */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/erc201.sol\":838:1065  function _mint(address account, uint256 amount) internal virtual override(ERC20Capped, ERC20) {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/erc201.sol\":1171:1510  function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual override {... */\ntag_59:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/erc201.sol\":1282:1300  from != address(0) */\n  dup4\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"contracts/erc201.sol\":1282:1324  from != address(0) && to != block.coinbase */\n  tag_66\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/erc201.sol\":1304:1324  to != block.coinbase */\n  dup3\n  and\n    /* \"contracts/erc201.sol\":1310:1324  block.coinbase */\n  coinbase\n    /* \"contracts/erc201.sol\":1304:1324  to != block.coinbase */\n  eq\n  iszero\n    /* \"contracts/erc201.sol\":1282:1324  from != address(0) && to != block.coinbase */\ntag_66:\n    /* \"contracts/erc201.sol\":1282:1356  from != address(0) && to != block.coinbase && block.coinbase != address(0) */\n  dup1\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"contracts/erc201.sol\":1328:1342  block.coinbase */\n  coinbase\n    /* \"contracts/erc201.sol\":1328:1356  block.coinbase != address(0) */\n  iszero\n  iszero\n    /* \"contracts/erc201.sol\":1282:1356  from != address(0) && to != block.coinbase && block.coinbase != address(0) */\ntag_67:\n    /* \"contracts/erc201.sol\":1282:1402  from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap() */\n  dup1\n  iszero\n  tag_68\n  jumpi\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n  sload(0x05)\n    /* \"contracts/erc201.sol\":1382:1393  blockReward */\n  sload(0x07)\n    /* \"contracts/erc201.sol\":1360:1379  ERC20.totalSupply() */\n  tag_70\n    /* \"contracts/erc201.sol\":1360:1377  ERC20.totalSupply */\n  or(tag_0_38, shl(0x20, tag_36))\n    /* \"contracts/erc201.sol\":1360:1379  ERC20.totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_70:\n    /* \"contracts/erc201.sol\":1360:1393  ERC20.totalSupply() + blockReward */\n  tag_71\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_71:\n    /* \"contracts/erc201.sol\":1360:1402  ERC20.totalSupply() + blockReward <= cap() */\n  gt\n  iszero\n    /* \"contracts/erc201.sol\":1282:1402  from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap() */\ntag_68:\n    /* \"contracts/erc201.sol\":1279:1449  if(from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap()) {... */\n  iszero\n  tag_73\n  jumpi\n    /* \"contracts/erc201.sol\":1419:1437  _mintMinerReward() */\n  tag_73\n    /* \"contracts/erc201.sol\":1419:1435  _mintMinerReward */\n  tag_74\n    /* \"contracts/erc201.sol\":1419:1437  _mintMinerReward() */\n  jump\t// in\ntag_73:\n    /* \"contracts/erc201.sol\":1459:1502  super._beforeTokenTransfer(from, to, value) */\n  tag_75\n    /* \"contracts/erc201.sol\":1486:1490  from */\n  dup4\n    /* \"contracts/erc201.sol\":1492:1494  to */\n  dup4\n    /* \"contracts/erc201.sol\":1496:1501  value */\n  dup4\n    /* \"contracts/erc201.sol\":1459:1485  super._beforeTokenTransfer */\n  or(tag_0_93, shl(0x20, tag_75))\n    /* \"contracts/erc201.sol\":1459:1502  super._beforeTokenTransfer(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_75:\n    /* \"contracts/erc201.sol\":1171:1510  function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/erc201.sol\":1073:1163  function _mintMinerReward() internal {... */\ntag_74:\n    /* \"contracts/erc201.sol\":1121:1155  _mint(block.coinbase, blockReward) */\n  tag_79\n    /* \"contracts/erc201.sol\":1127:1141  block.coinbase */\n  coinbase\n    /* \"contracts/erc201.sol\":1143:1154  blockReward */\n  sload(0x07)\n    /* \"contracts/erc201.sol\":1121:1126  _mint */\n  shl(0x20, tag_26)\n    /* \"contracts/erc201.sol\":1121:1155  _mint(block.coinbase, blockReward) */\n  0x20\n  shr\n  jump\t// in\ntag_79:\n    /* \"contracts/erc201.sol\":1073:1163  function _mintMinerReward() internal {... */\n  jump\t// out\n    /* \"#utility.yul\":14:259   */\ntag_3:\n    /* \"#utility.yul\":93:99   */\n  0x00\n    /* \"#utility.yul\":101:107   */\n  dup1\n    /* \"#utility.yul\":154:156   */\n  0x40\n    /* \"#utility.yul\":142:151   */\n  dup4\n    /* \"#utility.yul\":133:140   */\n  dup6\n    /* \"#utility.yul\":129:152   */\n  sub\n    /* \"#utility.yul\":125:157   */\n  slt\n    /* \"#utility.yul\":122:174   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":170:171   */\n  0x00\n    /* \"#utility.yul\":167:168   */\n  dup1\n    /* \"#utility.yul\":160:172   */\n  revert\n    /* \"#utility.yul\":122:174   */\ntag_91:\n  pop\n  pop\n    /* \"#utility.yul\":193:209   */\n  dup1\n  mload\n    /* \"#utility.yul\":249:251   */\n  0x20\n    /* \"#utility.yul\":234:252   */\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":228:253   */\n  mload\n    /* \"#utility.yul\":193:209   */\n  swap1\n  swap3\n    /* \"#utility.yul\":228:253   */\n  swap1\n  swap2\n  pop\n    /* \"#utility.yul\":14:259   */\n  jump\t// out\n    /* \"#utility.yul\":264:391   */\ntag_81:\n    /* \"#utility.yul\":325:335   */\n  0x4e487b71\n    /* \"#utility.yul\":320:323   */\n  0xe0\n    /* \"#utility.yul\":316:336   */\n  shl\n    /* \"#utility.yul\":313:314   */\n  0x00\n    /* \"#utility.yul\":306:337   */\n  mstore\n    /* \"#utility.yul\":356:360   */\n  0x11\n    /* \"#utility.yul\":353:354   */\n  0x04\n    /* \"#utility.yul\":346:361   */\n  mstore\n    /* \"#utility.yul\":380:384   */\n  0x24\n    /* \"#utility.yul\":377:378   */\n  0x00\n    /* \"#utility.yul\":370:385   */\n  revert\n    /* \"#utility.yul\":396:818   */\ntag_82:\n    /* \"#utility.yul\":485:486   */\n  0x01\n    /* \"#utility.yul\":528:533   */\n  dup2\n    /* \"#utility.yul\":485:486   */\n  dup2\n    /* \"#utility.yul\":542:812   */\ntag_94:\n    /* \"#utility.yul\":563:570   */\n  dup1\n    /* \"#utility.yul\":553:561   */\n  dup6\n    /* \"#utility.yul\":550:571   */\n  gt\n    /* \"#utility.yul\":542:812   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":622:626   */\n  dup2\n    /* \"#utility.yul\":618:619   */\n  0x00\n    /* \"#utility.yul\":614:620   */\n  not\n    /* \"#utility.yul\":610:627   */\n  div\n    /* \"#utility.yul\":604:608   */\n  dup3\n    /* \"#utility.yul\":601:628   */\n  gt\n    /* \"#utility.yul\":598:651   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":631:649   */\n  tag_98\n  tag_81\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":681:688   */\n  dup1\n    /* \"#utility.yul\":671:679   */\n  dup6\n    /* \"#utility.yul\":667:689   */\n  and\n    /* \"#utility.yul\":664:719   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":701:717   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":664:719   */\ntag_99:\n    /* \"#utility.yul\":780:802   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":740:755   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":542:812   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":546:549   */\n  pop\n    /* \"#utility.yul\":396:818   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":823:1629   */\ntag_83:\n    /* \"#utility.yul\":872:877   */\n  0x00\n    /* \"#utility.yul\":902:910   */\n  dup3\n    /* \"#utility.yul\":892:972   */\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":943:944   */\n  0x01\n    /* \"#utility.yul\":957:962   */\n  jump(tag_100)\n    /* \"#utility.yul\":892:972   */\ntag_101:\n    /* \"#utility.yul\":991:995   */\n  dup2\n    /* \"#utility.yul\":981:1057   */\n  tag_102\n  jumpi\n  pop\n    /* \"#utility.yul\":1028:1029   */\n  0x00\n    /* \"#utility.yul\":1042:1047   */\n  jump(tag_100)\n    /* \"#utility.yul\":981:1057   */\ntag_102:\n    /* \"#utility.yul\":1073:1077   */\n  dup2\n    /* \"#utility.yul\":1091:1092   */\n  0x01\n    /* \"#utility.yul\":1086:1145   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1159:1160   */\n  0x02\n    /* \"#utility.yul\":1154:1284   */\n  dup2\n  eq\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1066:1284   */\n  jump(tag_103)\n    /* \"#utility.yul\":1086:1145   */\ntag_104:\n    /* \"#utility.yul\":1116:1117   */\n  0x01\n    /* \"#utility.yul\":1107:1117   */\n  swap2\n  pop\n    /* \"#utility.yul\":1130:1135   */\n  pop\n  jump(tag_100)\n    /* \"#utility.yul\":1154:1284   */\ntag_105:\n    /* \"#utility.yul\":1191:1194   */\n  0xff\n    /* \"#utility.yul\":1181:1189   */\n  dup5\n    /* \"#utility.yul\":1178:1195   */\n  gt\n    /* \"#utility.yul\":1175:1218   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":1198:1216   */\n  tag_107\n  tag_81\n  jump\t// in\ntag_107:\n  pop\n  pop\n    /* \"#utility.yul\":1254:1255   */\n  0x01\n    /* \"#utility.yul\":1240:1256   */\n  dup3\n  shl\n    /* \"#utility.yul\":1269:1274   */\n  jump(tag_100)\n    /* \"#utility.yul\":1066:1284   */\ntag_103:\n  pop\n    /* \"#utility.yul\":1368:1370   */\n  0x20\n    /* \"#utility.yul\":1358:1366   */\n  dup4\n    /* \"#utility.yul\":1355:1371   */\n  lt\n    /* \"#utility.yul\":1349:1352   */\n  0x0133\n    /* \"#utility.yul\":1343:1347   */\n  dup4\n    /* \"#utility.yul\":1340:1353   */\n  lt\n    /* \"#utility.yul\":1336:1372   */\n  and\n    /* \"#utility.yul\":1330:1332   */\n  0x4e\n    /* \"#utility.yul\":1320:1328   */\n  dup5\n    /* \"#utility.yul\":1317:1333   */\n  lt\n    /* \"#utility.yul\":1312:1314   */\n  0x0b\n    /* \"#utility.yul\":1306:1310   */\n  dup5\n    /* \"#utility.yul\":1303:1315   */\n  lt\n    /* \"#utility.yul\":1299:1334   */\n  and\n    /* \"#utility.yul\":1296:1373   */\n  or\n    /* \"#utility.yul\":1293:1452   */\n  iszero\n  tag_108\n  jumpi\n  pop\n    /* \"#utility.yul\":1405:1424   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1437:1442   */\n  jump(tag_100)\n    /* \"#utility.yul\":1293:1452   */\ntag_108:\n    /* \"#utility.yul\":1484:1518   */\n  tag_109\n    /* \"#utility.yul\":1509:1517   */\n  dup4\n    /* \"#utility.yul\":1503:1507   */\n  dup4\n    /* \"#utility.yul\":1484:1518   */\n  tag_82\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1554:1560   */\n  dup1\n    /* \"#utility.yul\":1550:1551   */\n  0x00\n    /* \"#utility.yul\":1546:1552   */\n  not\n    /* \"#utility.yul\":1542:1561   */\n  div\n    /* \"#utility.yul\":1533:1540   */\n  dup3\n    /* \"#utility.yul\":1530:1562   */\n  gt\n    /* \"#utility.yul\":1527:1585   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1565:1583   */\n  tag_111\n  tag_81\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1603:1623   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":823:1629   */\ntag_100:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1634:1774   */\ntag_8:\n    /* \"#utility.yul\":1692:1697   */\n  0x00\n    /* \"#utility.yul\":1721:1768   */\n  tag_113\n    /* \"#utility.yul\":1762:1766   */\n  0xff\n    /* \"#utility.yul\":1752:1760   */\n  dup5\n    /* \"#utility.yul\":1748:1767   */\n  and\n    /* \"#utility.yul\":1742:1746   */\n  dup4\n    /* \"#utility.yul\":1721:1768   */\n  tag_83\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":1712:1768   */\n  swap4\n    /* \"#utility.yul\":1634:1774   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1779:1947   */\ntag_10:\n    /* \"#utility.yul\":1852:1861   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":1883:1892   */\n  dup2\n  iszero\n    /* \"#utility.yul\":1900:1915   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":1894:1916   */\n  dup5\n  eq\n    /* \"#utility.yul\":1880:1917   */\n  or\n    /* \"#utility.yul\":1870:1941   */\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1921:1939   */\n  tag_100\n  tag_81\n  jump\t// in\n    /* \"#utility.yul\":1952:2079   */\ntag_84:\n    /* \"#utility.yul\":2013:2023   */\n  0x4e487b71\n    /* \"#utility.yul\":2008:2011   */\n  0xe0\n    /* \"#utility.yul\":2004:2024   */\n  shl\n    /* \"#utility.yul\":2001:2002   */\n  0x00\n    /* \"#utility.yul\":1994:2025   */\n  mstore\n    /* \"#utility.yul\":2044:2048   */\n  0x41\n    /* \"#utility.yul\":2041:2042   */\n  0x04\n    /* \"#utility.yul\":2034:2049   */\n  mstore\n    /* \"#utility.yul\":2068:2072   */\n  0x24\n    /* \"#utility.yul\":2065:2066   */\n  0x00\n    /* \"#utility.yul\":2058:2073   */\n  revert\n    /* \"#utility.yul\":2084:2464   */\ntag_85:\n    /* \"#utility.yul\":2163:2164   */\n  0x01\n    /* \"#utility.yul\":2159:2171   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2206:2218   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2227:2288   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2281:2285   */\n  0x7f\n    /* \"#utility.yul\":2273:2279   */\n  dup3\n    /* \"#utility.yul\":2269:2286   */\n  and\n    /* \"#utility.yul\":2259:2286   */\n  swap2\n  pop\n    /* \"#utility.yul\":2227:2288   */\ntag_119:\n    /* \"#utility.yul\":2334:2336   */\n  0x20\n    /* \"#utility.yul\":2326:2332   */\n  dup3\n    /* \"#utility.yul\":2323:2337   */\n  lt\n    /* \"#utility.yul\":2303:2321   */\n  dup2\n    /* \"#utility.yul\":2300:2338   */\n  sub\n    /* \"#utility.yul\":2297:2458   */\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2380:2390   */\n  0x4e487b71\n    /* \"#utility.yul\":2375:2378   */\n  0xe0\n    /* \"#utility.yul\":2371:2391   */\n  shl\n    /* \"#utility.yul\":2368:2369   */\n  0x00\n    /* \"#utility.yul\":2361:2392   */\n  mstore\n    /* \"#utility.yul\":2415:2419   */\n  0x22\n    /* \"#utility.yul\":2412:2413   */\n  0x04\n    /* \"#utility.yul\":2405:2420   */\n  mstore\n    /* \"#utility.yul\":2443:2447   */\n  0x24\n    /* \"#utility.yul\":2440:2441   */\n  0x00\n    /* \"#utility.yul\":2433:2448   */\n  revert\n    /* \"#utility.yul\":2297:2458   */\ntag_120:\n  pop\n    /* \"#utility.yul\":2084:2464   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2595:3140   */\ntag_87:\n    /* \"#utility.yul\":2697:2699   */\n  0x1f\n    /* \"#utility.yul\":2692:2695   */\n  dup3\n    /* \"#utility.yul\":2689:2700   */\n  gt\n    /* \"#utility.yul\":2686:3134   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2733:2734   */\n  0x00\n    /* \"#utility.yul\":2758:2763   */\n  dup2\n    /* \"#utility.yul\":2754:2756   */\n  dup2\n    /* \"#utility.yul\":2747:2764   */\n  mstore\n    /* \"#utility.yul\":2803:2807   */\n  0x20\n    /* \"#utility.yul\":2799:2801   */\n  dup2\n    /* \"#utility.yul\":2789:2808   */\n  keccak256\n    /* \"#utility.yul\":2873:2875   */\n  0x1f\n    /* \"#utility.yul\":2861:2871   */\n  dup6\n    /* \"#utility.yul\":2857:2876   */\n  add\n    /* \"#utility.yul\":2854:2855   */\n  0x05\n    /* \"#utility.yul\":2850:2877   */\n  shr\n    /* \"#utility.yul\":2844:2848   */\n  dup2\n    /* \"#utility.yul\":2840:2878   */\n  add\n    /* \"#utility.yul\":2909:2913   */\n  0x20\n    /* \"#utility.yul\":2897:2907   */\n  dup7\n    /* \"#utility.yul\":2894:2914   */\n  lt\n    /* \"#utility.yul\":2891:2938   */\n  iszero\n  tag_124\n  jumpi\n  pop\n    /* \"#utility.yul\":2932:2936   */\n  dup1\n    /* \"#utility.yul\":2891:2938   */\ntag_124:\n    /* \"#utility.yul\":2987:2989   */\n  0x1f\n    /* \"#utility.yul\":2982:2985   */\n  dup6\n    /* \"#utility.yul\":2978:2990   */\n  add\n    /* \"#utility.yul\":2975:2976   */\n  0x05\n    /* \"#utility.yul\":2971:2991   */\n  shr\n    /* \"#utility.yul\":2965:2969   */\n  dup3\n    /* \"#utility.yul\":2961:2992   */\n  add\n    /* \"#utility.yul\":2951:2992   */\n  swap2\n  pop\n    /* \"#utility.yul\":3042:3124   */\ntag_125:\n    /* \"#utility.yul\":3060:3062   */\n  dup2\n    /* \"#utility.yul\":3053:3058   */\n  dup2\n    /* \"#utility.yul\":3050:3063   */\n  lt\n    /* \"#utility.yul\":3042:3124   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3105:3122   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":3086:3087   */\n  0x01\n    /* \"#utility.yul\":3075:3088   */\n  add\n    /* \"#utility.yul\":3042:3124   */\n  jump(tag_125)\ntag_127:\n    /* \"#utility.yul\":3046:3049   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2595:3140   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3316:4668   */\ntag_15:\n    /* \"#utility.yul\":3436:3446   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3458:3488   */\n  dup2\n  gt\n    /* \"#utility.yul\":3455:3511   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3491:3509   */\n  tag_131\n  tag_84\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3520:3617   */\n  tag_132\n    /* \"#utility.yul\":3610:3616   */\n  dup2\n    /* \"#utility.yul\":3570:3608   */\n  tag_133\n    /* \"#utility.yul\":3602:3606   */\n  dup5\n    /* \"#utility.yul\":3596:3607   */\n  sload\n    /* \"#utility.yul\":3570:3608   */\n  tag_85\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3564:3568   */\n  dup5\n    /* \"#utility.yul\":3520:3617   */\n  tag_87\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3672:3676   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3736:3738   */\n  0x1f\n    /* \"#utility.yul\":3725:3739   */\n  dup4\n  gt\n    /* \"#utility.yul\":3753:3754   */\n  0x01\n    /* \"#utility.yul\":3748:4411   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4455:4456   */\n  0x00\n    /* \"#utility.yul\":4472:4478   */\n  dup5\n    /* \"#utility.yul\":4469:4558   */\n  iszero\n  tag_136\n  jumpi\n  pop\n    /* \"#utility.yul\":4524:4543   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4518:4544   */\n  mload\n    /* \"#utility.yul\":4469:4558   */\ntag_136:\n  not(0x00)\n    /* \"#utility.yul\":3273:3274   */\n  0x03\n    /* \"#utility.yul\":3269:3280   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3265:3289   */\n  shr\n    /* \"#utility.yul\":3261:3290   */\n  not\n    /* \"#utility.yul\":3251:3291   */\n  and\n    /* \"#utility.yul\":3297:3298   */\n  0x01\n    /* \"#utility.yul\":3293:3304   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3248:3305   */\n  or\n    /* \"#utility.yul\":4571:4652   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3718:4662   */\n  jump(tag_127)\n    /* \"#utility.yul\":3748:4411   */\ntag_135:\n    /* \"#utility.yul\":2542:2543   */\n  0x00\n    /* \"#utility.yul\":2535:2549   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2579:2583   */\n  0x20\n    /* \"#utility.yul\":2566:2584   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3784:3804   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3902:4138   */\ntag_139:\n    /* \"#utility.yul\":3916:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3914   */\n  dup2\n    /* \"#utility.yul\":3910:3924   */\n  lt\n    /* \"#utility.yul\":3902:4138   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4005:4024   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3999:4025   */\n  mload\n    /* \"#utility.yul\":3984:4026   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4097:4124   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4065:4066   */\n  0x01\n    /* \"#utility.yul\":4053:4067   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3932:3951   */\n  dup5\n  add\n    /* \"#utility.yul\":3902:4138   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":3906:3909   */\n  pop\n    /* \"#utility.yul\":4166:4172   */\n  dup6\n    /* \"#utility.yul\":4157:4164   */\n  dup3\n    /* \"#utility.yul\":4154:4173   */\n  lt\n    /* \"#utility.yul\":4151:4352   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":4227:4246   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4221:4247   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4310:4311   */\n  0x03\n    /* \"#utility.yul\":4306:4320   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4322:4325   */\n  0xf8\n    /* \"#utility.yul\":4302:4326   */\n  and\n    /* \"#utility.yul\":4298:4335   */\n  shr\n    /* \"#utility.yul\":4294:4336   */\n  not\n    /* \"#utility.yul\":4279:4337   */\n  and\n    /* \"#utility.yul\":4264:4338   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4151:4352   */\ntag_142:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4398:4399   */\n  0x01\n    /* \"#utility.yul\":4382:4396   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4378:4400   */\n  add\n    /* \"#utility.yul\":4365:4401   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3316:4668   */\n  jump\t// out\n    /* \"#utility.yul\":5023:5148   */\ntag_38:\n    /* \"#utility.yul\":5088:5097   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5109:5119   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5106:5142   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5122:5140   */\n  tag_100\n  tag_81\n  jump\t// in\n    /* \"#utility.yul\":5867:6044   */\ntag_89:\n    /* \"contracts/erc201.sol\":457:1772  contract Blank is ERC20Capped, ERC20Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/erc201.sol\":457:1772  contract Blank is ERC20Capped, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x1a18e707\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x1a18e707\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ac168a1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"contracts/erc201.sol\":544:570  uint256 public blockReward */\n    tag_5:\n      tag_33\n      sload(0x07)\n      dup2\n      jump\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"contracts/erc201.sol\":544:570  uint256 public blockReward */\n      tag_25\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_33)\n        /* \"contracts/erc201.sol\":1518:1635  function setBlockReward(uint256 reward) public onlyOwner {... */\n    tag_7:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_8:\n      tag_27\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":2038:2074   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2026:2028   */\n      0x20\n        /* \"#utility.yul\":2011:2029   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":1896:2080   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":625:706  function cap() public view virtual returns (uint256) {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n      sload(0x05)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":625:706  function cap() public view virtual returns (uint256) {... */\n      jump(tag_33)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_27\n      tag_57\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_12:\n      tag_40\n      tag_61\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_33\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_14:\n      tag_40\n      tag_69\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/erc201.sol\":509:537  address payable public owner */\n    tag_15:\n      sload(0x06)\n      tag_71\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_71:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2456:2488   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2438:2489   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2426:2428   */\n      0x20\n        /* \"#utility.yul\":2411:2429   */\n      add\n        /* \"contracts/erc201.sol\":509:537  address payable public owner */\n      tag_25\n        /* \"#utility.yul\":2276:2495   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_16:\n      tag_23\n      tag_76\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_17:\n      tag_27\n      tag_79\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_18:\n      tag_27\n      tag_83\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_19:\n      tag_33\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_101:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_38:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/erc201.sol\":1518:1635  function setBlockReward(uint256 reward) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/erc201.sol\":1702:1707  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"contracts/erc201.sol\":1688:1698  msg.sender */\n      caller\n        /* \"contracts/erc201.sol\":1688:1707  msg.sender == owner */\n      eq\n        /* \"contracts/erc201.sol\":1680:1749  require(msg.sender == owner, \"Only the owner can call this function\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3352:3354   */\n      0x20\n        /* \"contracts/erc201.sol\":1680:1749  require(msg.sender == owner, \"Only the owner can call this function\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3334:3355   */\n      mstore\n        /* \"#utility.yul\":3391:3393   */\n      0x25\n        /* \"#utility.yul\":3371:3389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3364:3394   */\n      mstore\n        /* \"#utility.yul\":3430:3464   */\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e\n        /* \"#utility.yul\":3410:3428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3403:3465   */\n      mstore\n      shl(0xd9, 0x31ba34b7b7)\n        /* \"#utility.yul\":3481:3499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3474:3509   */\n      mstore\n        /* \"#utility.yul\":3526:3545   */\n      0x84\n      add\n        /* \"contracts/erc201.sol\":1680:1749  require(msg.sender == owner, \"Only the owner can call this function\") */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/erc201.sol\":1610:1626  10 ** decimals() */\n      tag_113\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"contracts/erc201.sol\":1610:1612  10 */\n      0x0a\n        /* \"contracts/erc201.sol\":1610:1626  10 ** decimals() */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/erc201.sol\":1600:1627  reward * (10 ** decimals()) */\n      tag_115\n      swap1\n        /* \"contracts/erc201.sol\":1600:1606  reward */\n      dup3\n        /* \"contracts/erc201.sol\":1600:1627  reward * (10 ** decimals()) */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"contracts/erc201.sol\":1586:1597  blockReward */\n      0x07\n        /* \"contracts/erc201.sol\":1586:1627  blockReward = reward * (10 ** decimals()) */\n      sstore\n      pop\n        /* \"contracts/erc201.sol\":1518:1635  function setBlockReward(uint256 reward) public onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_58:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_128\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_132\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_120\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n    tag_139:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_76:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_148\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5576:5578   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5558:5579   */\n      mstore\n        /* \"#utility.yul\":5615:5617   */\n      0x25\n        /* \"#utility.yul\":5595:5613   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5588:5618   */\n      mstore\n        /* \"#utility.yul\":5654:5688   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5634:5652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5627:5689   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":5705:5723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5698:5733   */\n      mstore\n        /* \"#utility.yul\":5750:5769   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_109\n        /* \"#utility.yul\":5374:5775   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_121\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":759:963  function _mint(address account, uint256 amount) internal virtual override {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n      sload(0x05)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":873:879  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:870  ERC20.totalSupply() */\n      tag_159\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:870  ERC20.totalSupply() */\n    tag_159:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:879  ERC20.totalSupply() + amount */\n      tag_160\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_160:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":851:888  ERC20.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5964:5985   */\n      mstore\n        /* \"#utility.yul\":6021:6023   */\n      0x19\n        /* \"#utility.yul\":6001:6019   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5994:6024   */\n      mstore\n      shl(0x3a, 0x115490cc8c10d85c1c19590e8818d85c08195e18d959591959)\n        /* \"#utility.yul\":6040:6058   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6033:6088   */\n      mstore\n        /* \"#utility.yul\":6105:6123   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_109\n        /* \"#utility.yul\":5780:6129   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":843:918  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":928:956  super._mint(account, amount) */\n      tag_139\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":940:947  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":949:955  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6336:6338   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6318:6339   */\n      mstore\n        /* \"#utility.yul\":6375:6377   */\n      0x1f\n        /* \"#utility.yul\":6355:6373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6348:6378   */\n      mstore\n        /* \"#utility.yul\":6414:6447   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6394:6412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6387:6448   */\n      mstore\n        /* \"#utility.yul\":6465:6483   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_109\n        /* \"#utility.yul\":6134:6489   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n      tag_170\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_171:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_93:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6696:6698   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6678:6699   */\n      mstore\n        /* \"#utility.yul\":6735:6737   */\n      0x24\n        /* \"#utility.yul\":6715:6733   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6708:6738   */\n      mstore\n        /* \"#utility.yul\":6774:6808   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":6754:6772   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6747:6809   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6825:6843   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6818:6852   */\n      mstore\n        /* \"#utility.yul\":6869:6888   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n        /* \"#utility.yul\":6494:6894   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7101:7103   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7083:7104   */\n      mstore\n        /* \"#utility.yul\":7140:7142   */\n      0x22\n        /* \"#utility.yul\":7120:7138   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7113:7143   */\n      mstore\n        /* \"#utility.yul\":7179:7213   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7159:7177   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7152:7214   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7230:7248   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7223:7255   */\n      mstore\n        /* \"#utility.yul\":7272:7291   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_109\n        /* \"#utility.yul\":6899:7297   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_186\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_89\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_191\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7504:7506   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7486:7507   */\n      mstore\n        /* \"#utility.yul\":7543:7545   */\n      0x1d\n        /* \"#utility.yul\":7523:7541   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7516:7546   */\n      mstore\n        /* \"#utility.yul\":7582:7613   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":7562:7580   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7555:7614   */\n      mstore\n        /* \"#utility.yul\":7631:7649   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_109\n        /* \"#utility.yul\":7302:7655   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7862:7864   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7844:7865   */\n      mstore\n        /* \"#utility.yul\":7901:7903   */\n      0x25\n        /* \"#utility.yul\":7881:7899   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7874:7904   */\n      mstore\n        /* \"#utility.yul\":7940:7974   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":7920:7938   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7913:7975   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":7991:8009   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7984:8019   */\n      mstore\n        /* \"#utility.yul\":8036:8055   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_109\n        /* \"#utility.yul\":7660:8061   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8268:8270   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8250:8271   */\n      mstore\n        /* \"#utility.yul\":8307:8309   */\n      0x23\n        /* \"#utility.yul\":8287:8305   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8280:8310   */\n      mstore\n        /* \"#utility.yul\":8346:8380   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8326:8344   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8319:8381   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":8397:8415   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8390:8423   */\n      mstore\n        /* \"#utility.yul\":8440:8459   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_109\n        /* \"#utility.yul\":8066:8465   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_199\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_170\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8672:8674   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8654:8675   */\n      mstore\n        /* \"#utility.yul\":8711:8713   */\n      0x26\n        /* \"#utility.yul\":8691:8709   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8684:8714   */\n      mstore\n        /* \"#utility.yul\":8750:8784   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8730:8748   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8723:8785   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8801:8819   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8794:8830   */\n      mstore\n        /* \"#utility.yul\":8847:8866   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_109\n        /* \"#utility.yul\":8470:8872   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_191\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9079:9081   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9061:9082   */\n      mstore\n        /* \"#utility.yul\":9118:9120   */\n      0x21\n        /* \"#utility.yul\":9098:9116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9091:9121   */\n      mstore\n        /* \"#utility.yul\":9157:9191   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":9137:9155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9130:9192   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":9208:9226   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9201:9232   */\n      mstore\n        /* \"#utility.yul\":9249:9268   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_109\n        /* \"#utility.yul\":8877:9274   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_206:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      tag_209\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9549:9556  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9566:9567  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9570:9576  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9528:9548  _beforeTokenTransfer */\n      tag_170\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9481:9483   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9463:9484   */\n      mstore\n        /* \"#utility.yul\":9520:9522   */\n      0x22\n        /* \"#utility.yul\":9500:9518   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9493:9523   */\n      mstore\n        /* \"#utility.yul\":9559:9593   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":9539:9557   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9532:9594   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":9610:9628   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9603:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_109\n        /* \"#utility.yul\":9279:9677   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/erc201.sol\":1171:1510  function _beforeTokenTransfer(address from, address to, uint256 value) internal virtual override {... */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/erc201.sol\":1282:1300  from != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/erc201.sol\":1282:1324  from != address(0) && to != block.coinbase */\n      tag_216\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/erc201.sol\":1304:1324  to != block.coinbase */\n      dup3\n      and\n        /* \"contracts/erc201.sol\":1310:1324  block.coinbase */\n      coinbase\n        /* \"contracts/erc201.sol\":1304:1324  to != block.coinbase */\n      eq\n      iszero\n        /* \"contracts/erc201.sol\":1282:1324  from != address(0) && to != block.coinbase */\n    tag_216:\n        /* \"contracts/erc201.sol\":1282:1356  from != address(0) && to != block.coinbase && block.coinbase != address(0) */\n      dup1\n      iszero\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/erc201.sol\":1328:1342  block.coinbase */\n      coinbase\n        /* \"contracts/erc201.sol\":1328:1356  block.coinbase != address(0) */\n      iszero\n      iszero\n        /* \"contracts/erc201.sol\":1282:1356  from != address(0) && to != block.coinbase && block.coinbase != address(0) */\n    tag_217:\n        /* \"contracts/erc201.sol\":1282:1402  from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap() */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n      sload(0x05)\n        /* \"contracts/erc201.sol\":1382:1393  blockReward */\n      sload(0x07)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"contracts/erc201.sol\":1360:1393  ERC20.totalSupply() + blockReward */\n      tag_221\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_221:\n        /* \"contracts/erc201.sol\":1360:1402  ERC20.totalSupply() + blockReward <= cap() */\n      gt\n      iszero\n        /* \"contracts/erc201.sol\":1282:1402  from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap() */\n    tag_218:\n        /* \"contracts/erc201.sol\":1279:1449  if(from != address(0) && to != block.coinbase && block.coinbase != address(0) && ERC20.totalSupply() + blockReward <= cap()) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"contracts/erc201.sol\":1419:1437  _mintMinerReward() */\n      tag_93\n        /* \"contracts/erc201.sol\":1121:1155  _mint(block.coinbase, blockReward) */\n      tag_228\n        /* \"contracts/erc201.sol\":1127:1141  block.coinbase */\n      coinbase\n        /* \"contracts/erc201.sol\":1143:1154  blockReward */\n      sload(0x07)\n        /* \"contracts/erc201.sol\":1121:1126  _mint */\n      tag_229\n        /* \"contracts/erc201.sol\":1121:1155  _mint(block.coinbase, blockReward) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/erc201.sol\":1073:1163  function _mintMinerReward() internal {... */\n      jump\t// out\n        /* \"contracts/erc201.sol\":838:1065  function _mint(address account, uint256 amount) internal virtual override(ERC20Capped, ERC20) {... */\n    tag_229:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":695:699  _cap */\n      sload(0x05)\n        /* \"contracts/erc201.sol\":973:979  amount */\n      dup2\n        /* \"contracts/erc201.sol\":951:970  ERC20.totalSupply() */\n      tag_232\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/erc201.sol\":951:970  ERC20.totalSupply() */\n    tag_232:\n        /* \"contracts/erc201.sol\":951:979  ERC20.totalSupply() + amount */\n      tag_233\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_233:\n        /* \"contracts/erc201.sol\":951:988  ERC20.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5982:5984   */\n      0x20\n        /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5964:5985   */\n      mstore\n        /* \"#utility.yul\":6021:6023   */\n      0x19\n        /* \"#utility.yul\":6001:6019   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5994:6024   */\n      mstore\n      shl(0x3a, 0x115490cc8c10d85c1c19590e8818d85c08195e18d959591959)\n        /* \"#utility.yul\":6040:6058   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6033:6088   */\n      mstore\n        /* \"#utility.yul\":6105:6123   */\n      0x64\n      add\n        /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_109\n        /* \"#utility.yul\":5780:6129   */\n      jump\n        /* \"contracts/erc201.sol\":943:1018  require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n    tag_234:\n        /* \"contracts/erc201.sol\":1029:1057  super._mint(account, amount) */\n      tag_139\n        /* \"contracts/erc201.sol\":1041:1048  account */\n      dup3\n        /* \"contracts/erc201.sol\":1050:1056  amount */\n      dup3\n        /* \"contracts/erc201.sol\":1029:1040  super._mint */\n      tag_91\n        /* \"contracts/erc201.sol\":1029:1057  super._mint(account, amount) */\n      jump\t// in\n        /* \"#utility.yul\":14:562   */\n    tag_26:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_243:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_243)\n    tag_245:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_237:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_247:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_29:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_249:\n        /* \"#utility.yul\":913:942   */\n      tag_250\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_237\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1558   */\n    tag_42:\n        /* \"#utility.yul\":1437:1443   */\n      0x00\n        /* \"#utility.yul\":1490:1492   */\n      0x20\n        /* \"#utility.yul\":1478:1487   */\n      dup3\n        /* \"#utility.yul\":1469:1476   */\n      dup5\n        /* \"#utility.yul\":1465:1488   */\n      sub\n        /* \"#utility.yul\":1461:1493   */\n      slt\n        /* \"#utility.yul\":1458:1510   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":1506:1507   */\n      0x00\n        /* \"#utility.yul\":1503:1504   */\n      dup1\n        /* \"#utility.yul\":1496:1508   */\n      revert\n        /* \"#utility.yul\":1458:1510   */\n    tag_254:\n      pop\n        /* \"#utility.yul\":1529:1552   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1378:1558   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:1891   */\n    tag_46:\n        /* \"#utility.yul\":1640:1646   */\n      0x00\n        /* \"#utility.yul\":1648:1654   */\n      dup1\n        /* \"#utility.yul\":1656:1662   */\n      0x00\n        /* \"#utility.yul\":1709:1711   */\n      0x60\n        /* \"#utility.yul\":1697:1706   */\n      dup5\n        /* \"#utility.yul\":1688:1695   */\n      dup7\n        /* \"#utility.yul\":1684:1707   */\n      sub\n        /* \"#utility.yul\":1680:1712   */\n      slt\n        /* \"#utility.yul\":1677:1729   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1722:1723   */\n      dup1\n        /* \"#utility.yul\":1715:1727   */\n      revert\n        /* \"#utility.yul\":1677:1729   */\n    tag_256:\n        /* \"#utility.yul\":1748:1777   */\n      tag_257\n        /* \"#utility.yul\":1767:1776   */\n      dup5\n        /* \"#utility.yul\":1748:1777   */\n      tag_237\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1738:1777   */\n      swap3\n      pop\n        /* \"#utility.yul\":1796:1834   */\n      tag_258\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1819:1828   */\n      dup6\n        /* \"#utility.yul\":1815:1833   */\n      add\n        /* \"#utility.yul\":1796:1834   */\n      tag_237\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1786:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1883   */\n      0x40\n        /* \"#utility.yul\":1870:1879   */\n      dup5\n        /* \"#utility.yul\":1866:1884   */\n      add\n        /* \"#utility.yul\":1853:1885   */\n      calldataload\n        /* \"#utility.yul\":1843:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1563:1891   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_65:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_261:\n        /* \"#utility.yul\":2236:2265   */\n      tag_262\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_237\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2760   */\n    tag_88:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2576:2582   */\n      dup1\n        /* \"#utility.yul\":2629:2631   */\n      0x40\n        /* \"#utility.yul\":2617:2626   */\n      dup4\n        /* \"#utility.yul\":2608:2615   */\n      dup6\n        /* \"#utility.yul\":2604:2627   */\n      sub\n        /* \"#utility.yul\":2600:2632   */\n      slt\n        /* \"#utility.yul\":2597:2649   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2645:2646   */\n      0x00\n        /* \"#utility.yul\":2642:2643   */\n      dup1\n        /* \"#utility.yul\":2635:2647   */\n      revert\n        /* \"#utility.yul\":2597:2649   */\n    tag_265:\n        /* \"#utility.yul\":2668:2697   */\n      tag_266\n        /* \"#utility.yul\":2687:2696   */\n      dup4\n        /* \"#utility.yul\":2668:2697   */\n      tag_237\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2658:2697   */\n      swap2\n      pop\n        /* \"#utility.yul\":2716:2754   */\n      tag_267\n        /* \"#utility.yul\":2750:2752   */\n      0x20\n        /* \"#utility.yul\":2739:2748   */\n      dup5\n        /* \"#utility.yul\":2735:2753   */\n      add\n        /* \"#utility.yul\":2716:2754   */\n      tag_237\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":2706:2754   */\n      swap1\n      pop\n        /* \"#utility.yul\":2500:2760   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2765:3145   */\n    tag_96:\n        /* \"#utility.yul\":2844:2845   */\n      0x01\n        /* \"#utility.yul\":2840:2852   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2887:2899   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2908:2969   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2962:2966   */\n      0x7f\n        /* \"#utility.yul\":2954:2960   */\n      dup3\n        /* \"#utility.yul\":2950:2967   */\n      and\n        /* \"#utility.yul\":2940:2967   */\n      swap2\n      pop\n        /* \"#utility.yul\":2908:2969   */\n    tag_269:\n        /* \"#utility.yul\":3015:3017   */\n      0x20\n        /* \"#utility.yul\":3007:3013   */\n      dup3\n        /* \"#utility.yul\":3004:3018   */\n      lt\n        /* \"#utility.yul\":2984:3002   */\n      dup2\n        /* \"#utility.yul\":2981:3019   */\n      sub\n        /* \"#utility.yul\":2978:3139   */\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3061:3071   */\n      0x4e487b71\n        /* \"#utility.yul\":3056:3059   */\n      0xe0\n        /* \"#utility.yul\":3052:3072   */\n      shl\n        /* \"#utility.yul\":3049:3050   */\n      0x00\n        /* \"#utility.yul\":3042:3073   */\n      mstore\n        /* \"#utility.yul\":3096:3100   */\n      0x22\n        /* \"#utility.yul\":3093:3094   */\n      0x04\n        /* \"#utility.yul\":3086:3101   */\n      mstore\n        /* \"#utility.yul\":3124:3128   */\n      0x24\n        /* \"#utility.yul\":3121:3122   */\n      0x00\n        /* \"#utility.yul\":3114:3129   */\n      revert\n        /* \"#utility.yul\":2978:3139   */\n    tag_270:\n      pop\n        /* \"#utility.yul\":2765:3145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3556:3683   */\n    tag_238:\n        /* \"#utility.yul\":3617:3627   */\n      0x4e487b71\n        /* \"#utility.yul\":3612:3615   */\n      0xe0\n        /* \"#utility.yul\":3608:3628   */\n      shl\n        /* \"#utility.yul\":3605:3606   */\n      0x00\n        /* \"#utility.yul\":3598:3629   */\n      mstore\n        /* \"#utility.yul\":3648:3652   */\n      0x11\n        /* \"#utility.yul\":3645:3646   */\n      0x04\n        /* \"#utility.yul\":3638:3653   */\n      mstore\n        /* \"#utility.yul\":3672:3676   */\n      0x24\n        /* \"#utility.yul\":3669:3670   */\n      0x00\n        /* \"#utility.yul\":3662:3677   */\n      revert\n        /* \"#utility.yul\":3688:4110   */\n    tag_239:\n        /* \"#utility.yul\":3777:3778   */\n      0x01\n        /* \"#utility.yul\":3820:3825   */\n      dup2\n        /* \"#utility.yul\":3777:3778   */\n      dup2\n        /* \"#utility.yul\":3834:4104   */\n    tag_274:\n        /* \"#utility.yul\":3855:3862   */\n      dup1\n        /* \"#utility.yul\":3845:3853   */\n      dup6\n        /* \"#utility.yul\":3842:3863   */\n      gt\n        /* \"#utility.yul\":3834:4104   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3914:3918   */\n      dup2\n        /* \"#utility.yul\":3910:3911   */\n      0x00\n        /* \"#utility.yul\":3906:3912   */\n      not\n        /* \"#utility.yul\":3902:3919   */\n      div\n        /* \"#utility.yul\":3896:3900   */\n      dup3\n        /* \"#utility.yul\":3893:3920   */\n      gt\n        /* \"#utility.yul\":3890:3943   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":3923:3941   */\n      tag_278\n      tag_238\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3973:3980   */\n      dup1\n        /* \"#utility.yul\":3963:3971   */\n      dup6\n        /* \"#utility.yul\":3959:3981   */\n      and\n        /* \"#utility.yul\":3956:4011   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":3993:4009   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":3956:4011   */\n    tag_279:\n        /* \"#utility.yul\":4072:4094   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":4032:4047   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":3834:4104   */\n      jump(tag_274)\n    tag_276:\n        /* \"#utility.yul\":3838:3841   */\n      pop\n        /* \"#utility.yul\":3688:4110   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4115:4921   */\n    tag_240:\n        /* \"#utility.yul\":4164:4169   */\n      0x00\n        /* \"#utility.yul\":4194:4202   */\n      dup3\n        /* \"#utility.yul\":4184:4264   */\n      tag_281\n      jumpi\n      pop\n        /* \"#utility.yul\":4235:4236   */\n      0x01\n        /* \"#utility.yul\":4249:4254   */\n      jump(tag_101)\n        /* \"#utility.yul\":4184:4264   */\n    tag_281:\n        /* \"#utility.yul\":4283:4287   */\n      dup2\n        /* \"#utility.yul\":4273:4349   */\n      tag_282\n      jumpi\n      pop\n        /* \"#utility.yul\":4320:4321   */\n      0x00\n        /* \"#utility.yul\":4334:4339   */\n      jump(tag_101)\n        /* \"#utility.yul\":4273:4349   */\n    tag_282:\n        /* \"#utility.yul\":4365:4369   */\n      dup2\n        /* \"#utility.yul\":4383:4384   */\n      0x01\n        /* \"#utility.yul\":4378:4437   */\n      dup2\n      eq\n      tag_284\n      jumpi\n        /* \"#utility.yul\":4451:4452   */\n      0x02\n        /* \"#utility.yul\":4446:4576   */\n      dup2\n      eq\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4358:4576   */\n      jump(tag_283)\n        /* \"#utility.yul\":4378:4437   */\n    tag_284:\n        /* \"#utility.yul\":4408:4409   */\n      0x01\n        /* \"#utility.yul\":4399:4409   */\n      swap2\n      pop\n        /* \"#utility.yul\":4422:4427   */\n      pop\n      jump(tag_101)\n        /* \"#utility.yul\":4446:4576   */\n    tag_285:\n        /* \"#utility.yul\":4483:4486   */\n      0xff\n        /* \"#utility.yul\":4473:4481   */\n      dup5\n        /* \"#utility.yul\":4470:4487   */\n      gt\n        /* \"#utility.yul\":4467:4510   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":4490:4508   */\n      tag_287\n      tag_238\n      jump\t// in\n    tag_287:\n      pop\n      pop\n        /* \"#utility.yul\":4546:4547   */\n      0x01\n        /* \"#utility.yul\":4532:4548   */\n      dup3\n      shl\n        /* \"#utility.yul\":4561:4566   */\n      jump(tag_101)\n        /* \"#utility.yul\":4358:4576   */\n    tag_283:\n      pop\n        /* \"#utility.yul\":4660:4662   */\n      0x20\n        /* \"#utility.yul\":4650:4658   */\n      dup4\n        /* \"#utility.yul\":4647:4663   */\n      lt\n        /* \"#utility.yul\":4641:4644   */\n      0x0133\n        /* \"#utility.yul\":4635:4639   */\n      dup4\n        /* \"#utility.yul\":4632:4645   */\n      lt\n        /* \"#utility.yul\":4628:4664   */\n      and\n        /* \"#utility.yul\":4622:4624   */\n      0x4e\n        /* \"#utility.yul\":4612:4620   */\n      dup5\n        /* \"#utility.yul\":4609:4625   */\n      lt\n        /* \"#utility.yul\":4604:4606   */\n      0x0b\n        /* \"#utility.yul\":4598:4602   */\n      dup5\n        /* \"#utility.yul\":4595:4607   */\n      lt\n        /* \"#utility.yul\":4591:4626   */\n      and\n        /* \"#utility.yul\":4588:4665   */\n      or\n        /* \"#utility.yul\":4585:4744   */\n      iszero\n      tag_288\n      jumpi\n      pop\n        /* \"#utility.yul\":4697:4716   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":4729:4734   */\n      jump(tag_101)\n        /* \"#utility.yul\":4585:4744   */\n    tag_288:\n        /* \"#utility.yul\":4776:4810   */\n      tag_289\n        /* \"#utility.yul\":4801:4809   */\n      dup4\n        /* \"#utility.yul\":4795:4799   */\n      dup4\n        /* \"#utility.yul\":4776:4810   */\n      tag_239\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4846:4852   */\n      dup1\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4838:4844   */\n      not\n        /* \"#utility.yul\":4834:4853   */\n      div\n        /* \"#utility.yul\":4825:4832   */\n      dup3\n        /* \"#utility.yul\":4822:4854   */\n      gt\n        /* \"#utility.yul\":4819:4877   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4857:4875   */\n      tag_291\n      tag_238\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4895:4915   */\n      mul\n      swap4\n        /* \"#utility.yul\":4115:4921   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4926:5066   */\n    tag_114:\n        /* \"#utility.yul\":4984:4989   */\n      0x00\n        /* \"#utility.yul\":5013:5060   */\n      tag_262\n        /* \"#utility.yul\":5054:5058   */\n      0xff\n        /* \"#utility.yul\":5044:5052   */\n      dup5\n        /* \"#utility.yul\":5040:5059   */\n      and\n        /* \"#utility.yul\":5034:5038   */\n      dup4\n        /* \"#utility.yul\":5013:5060   */\n      tag_240\n      jump\t// in\n        /* \"#utility.yul\":5071:5239   */\n    tag_116:\n        /* \"#utility.yul\":5144:5153   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5175:5184   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5192:5207   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5186:5208   */\n      dup5\n      eq\n        /* \"#utility.yul\":5172:5209   */\n      or\n        /* \"#utility.yul\":5162:5233   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":5213:5231   */\n      tag_101\n      tag_238\n      jump\t// in\n        /* \"#utility.yul\":5244:5369   */\n    tag_130:\n        /* \"#utility.yul\":5309:5318   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5330:5340   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5327:5363   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":5343:5361   */\n      tag_101\n      tag_238\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220b5da1a0032d328a2e7d1ff568161da880bf72cf2eebe9b5a1065b5ba1a36490364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_230": {
									"entryPoint": null,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_920": {
									"entryPoint": null,
									"id": 920,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_771": {
									"entryPoint": null,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_154": {
									"entryPoint": 867,
									"id": 154,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_760": {
									"entryPoint": null,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mintMinerReward_102": {
									"entryPoint": 1008,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_589": {
									"entryPoint": 658,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_92": {
									"entryPoint": 368,
									"id": 92,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_958": {
									"entryPoint": 518,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cap_929": {
									"entryPoint": null,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_260": {
									"entryPoint": null,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": 512,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 1030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6046:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "112:147:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "158:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "167:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "170:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "160:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "160:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "160:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "133:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "142:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "129:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "129:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "154:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "125:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:32:7"
															},
															"nodeType": "YulIf",
															"src": "122:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "183:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "199:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "193:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "193:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "218:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "238:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "249:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "234:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "234:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "228:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:25:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "70:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "81:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "93:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "101:6:7",
														"type": ""
													}
												],
												"src": "14:245:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "313:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "320:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "325:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "316:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "316:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "306:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "306:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "356:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "346:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "346:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "346:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "380:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "370:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "264:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "470:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "485:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "474:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "495:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "504:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "520:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "528:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "520:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "584:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "629:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "631:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "631:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "631:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "604:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "618:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "614:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "614:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "622:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "610:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "610:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "601:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "598:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "690:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "692:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "705:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "712:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "701:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "701:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "692:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "671:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "681:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "667:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "667:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "664:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "732:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "744:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "750:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "740:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "740:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "732:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "768:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "784:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "793:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "780:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "768:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "553:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "563:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "550:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "550:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "572:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "546:3:7",
																"statements": []
															},
															"src": "542:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "424:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "431:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "444:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "451:4:7",
														"type": ""
													}
												],
												"src": "396:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "882:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "920:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "934:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "943:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "934:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "957:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "902:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:16:7"
															},
															"nodeType": "YulIf",
															"src": "892:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1005:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1019:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1028:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1019:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1042:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "991:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:12:7"
															},
															"nodeType": "YulIf",
															"src": "981:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1093:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1107:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1107:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1130:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1086:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1091:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1161:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "1196:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "1198:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1198:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "1198:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1181:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1191:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1178:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1178:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "1175:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "1231:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "1244:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1254:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1240:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1240:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1269:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1154:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "1073:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "1066:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1382:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1396:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1409:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1415:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1405:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1405:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1396:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1437:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1306:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1312:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1303:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1320:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1330:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1317:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1317:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1343:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1349:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1340:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1340:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1358:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1368:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1355:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1355:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1336:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:77:7"
															},
															"nodeType": "YulIf",
															"src": "1293:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1461:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1503:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1509:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1484:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1465:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1474:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1563:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1565:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1565:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1565:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1533:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1550:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1546:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1546:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1554:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1542:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1530:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:32:7"
															},
															"nodeType": "YulIf",
															"src": "1527:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1594:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1607:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1616:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "853:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "859:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"src": "823:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:72:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1712:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1742:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1752:8:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1762:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1748:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1721:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1712:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1673:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1679:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1692:5:7",
														"type": ""
													}
												],
												"src": "1634:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1831:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1841:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1856:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1859:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1852:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1852:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1841:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1919:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1921:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1921:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1921:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1890:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1883:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1883:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1897:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "1904:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1913:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1900:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1900:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1894:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1880:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1873:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:45:7"
															},
															"nodeType": "YulIf",
															"src": "1870:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1810:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1813:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1819:7:7",
														"type": ""
													}
												],
												"src": "1779:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2001:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2008:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1994:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1994:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2041:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2044:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2034:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2034:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2065:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2068:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2058:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1952:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2139:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2149:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2163:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2166:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2159:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2180:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2210:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2184:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2257:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2259:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2273:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2281:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2269:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2269:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2237:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:26:7"
															},
															"nodeType": "YulIf",
															"src": "2227:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2347:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2368:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2375:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2380:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2371:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2371:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2361:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2361:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2361:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2412:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2415:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2405:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2405:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2405:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2440:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2443:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2433:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2433:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2303:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2334:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2323:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2323:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2300:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:38:7"
															},
															"nodeType": "YulIf",
															"src": "2297:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2119:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2128:6:7",
														"type": ""
													}
												],
												"src": "2084:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2525:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2542:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2535:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2558:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2579:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2566:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2558:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2508:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2516:4:7",
														"type": ""
													}
												],
												"src": "2469:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2676:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2709:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2723:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2733:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2727:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2754:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2758:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2747:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2747:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2747:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2777:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2799:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2803:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2789:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2781:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2821:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2844:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2854:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2861:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2873:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2857:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2857:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2850:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2850:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2840:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2840:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2825:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2915:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2917:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2932:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2917:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2897:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2909:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2894:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2894:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2891:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2951:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2965:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2975:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2982:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2987:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2978:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2978:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2971:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2971:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2961:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2961:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2955:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3005:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "3018:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "3009:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3103:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3112:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3119:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "3105:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3105:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3105:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3053:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3060:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3050:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3050:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "3064:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3066:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3079:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3086:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3075:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3075:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "3066:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "3046:3:7",
																			"statements": []
																		},
																		"src": "3042:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2692:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2689:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2689:11:7"
															},
															"nodeType": "YulIf",
															"src": "2686:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2648:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2655:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2660:10:7",
														"type": ""
													}
												],
												"src": "2595:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3240:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3255:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3273:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3276:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3269:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3269:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3286:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3282:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3282:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3265:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3265:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3261:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3251:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3300:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3293:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3293:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3248:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3248:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3240:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3207:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3213:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3221:4:7",
														"type": ""
													}
												],
												"src": "3145:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3422:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3442:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3436:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3436:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3426:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3489:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3491:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3491:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3491:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3461:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3477:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3481:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3473:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3473:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3485:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3458:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3458:30:7"
															},
															"nodeType": "YulIf",
															"src": "3455:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3564:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3602:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3596:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3596:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3570:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3610:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3520:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3520:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3626:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3643:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3630:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3653:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3672:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3657:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3685:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3698:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3685:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3755:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3769:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3788:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3800:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3796:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3796:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3784:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3784:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3773:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3817:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3861:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3831:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3831:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3821:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3879:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3888:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3883:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3966:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3991:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4009:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4014:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4005:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4005:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3999:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3999:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3984:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3984:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3984:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4043:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4057:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4065:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4053:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4053:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4043:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4084:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4101:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4112:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4097:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4097:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4084:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3913:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3916:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3910:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3910:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3925:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3927:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3936:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3939:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3932:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3932:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3927:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3906:3:7",
																					"statements": []
																				},
																				"src": "3902:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4186:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4204:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4231:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4236:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4227:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4227:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4221:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4221:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4208:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4271:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4283:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4310:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4313:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4306:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4306:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4322:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4302:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4302:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4332:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4328:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4328:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4298:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4298:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4294:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4294:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4279:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4279:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4264:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4264:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4264:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4157:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4166:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4154:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4154:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4151:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4372:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4386:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4389:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4382:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4382:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4398:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4378:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4378:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4365:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4365:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4365:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3748:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4428:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4442:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4455:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4446:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4491:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4509:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4528:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4533:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4524:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4524:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4518:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4518:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4509:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4472:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4469:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4578:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4637:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4644:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4584:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4584:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4571:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4571:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4571:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4420:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3728:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3736:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3725:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3718:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3397:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3403:3:7",
														"type": ""
													}
												],
												"src": "3316:1352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4847:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4864:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4875:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4857:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4898:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4909:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4894:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4914:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4887:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4887:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4948:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4933:18:7"
																	},
																	{
																		"hexValue": "45524332304361707065643a206361702069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4953:23:7",
																		"type": "",
																		"value": "ERC20Capped: cap is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4926:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4926:51:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4986:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4998:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4994:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4986:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4824:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4838:4:7",
														"type": ""
													}
												],
												"src": "4673:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5071:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5081:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5092:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5095:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5088:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5088:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5120:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5122:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5122:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5122:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5112:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5115:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5109:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:10:7"
															},
															"nodeType": "YulIf",
															"src": "5106:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5054:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5057:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5063:3:7",
														"type": ""
													}
												],
												"src": "5023:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5327:175:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5344:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5337:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5337:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5378:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5389:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5367:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5417:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5428:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5413:18:7"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5433:27:7",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5406:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5406:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5470:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5482:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5493:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5470:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5304:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5318:4:7",
														"type": ""
													}
												],
												"src": "5153:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5681:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5698:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5709:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5691:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5691:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5732:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5743:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5728:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5728:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5721:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5721:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5771:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5782:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5767:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5787:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5760:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5760:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5830:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5842:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5853:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5830:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5658:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5672:4:7",
														"type": ""
													}
												],
												"src": "5507:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5968:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5978:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5990:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6001:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5978:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6020:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6031:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6013:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5937:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5948:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5959:4:7",
														"type": ""
													}
												],
												"src": "5867:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200155c3803806200155c833981016040819052620000349162000406565b620000426012600a62000540565b6200004e908362000558565b604051806040016040528060048152602001634e616d6560e01b8152506040518060400160405280600681526020016514de5b589bdb60d21b81525081600390816200009b919062000616565b506004620000aa828262000616565b50505060008111620001035760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b600555600680546001600160a01b031916339081179091556200014a9062000129601290565b6200013690600a62000540565b62000144906103e862000558565b62000170565b620001586012600a62000540565b62000164908262000558565b60075550620006f89050565b60055481620001896200020060201b620003291760201c565b620001959190620006e2565b1115620001e55760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000fa565b620001fc82826200020660201b620004e71760201c565b5050565b60025490565b600554816200021f6200020060201b620003291760201c565b6200022b9190620006e2565b11156200027b5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000fa565b620001fc82826200029260201b6200054e1760201c565b6001600160a01b038216620002ea5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000fa565b620002f86000838362000363565b80600260008282546200030c9190620006e2565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038316158015906200038557506001600160a01b0382164114155b80156200039157504115155b8015620003c35750600554600754620003b46200020060201b620003291760201c565b620003c09190620006e2565b11155b15620003d357620003d3620003f0565b620003eb838383620003eb60201b620006191760201c565b505050565b62000404416007546200017060201b60201c565b565b600080604083850312156200041a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004825781600019048211156200046657620004666200042b565b808516156200047457918102915b93841c939080029062000446565b509250929050565b6000826200049b575060016200053a565b81620004aa575060006200053a565b8160018114620004c35760028114620004ce57620004ee565b60019150506200053a565b60ff841115620004e257620004e26200042b565b50506001821b6200053a565b5060208310610133831016604e8410600b841016171562000513575081810a6200053a565b6200051f838362000441565b80600019048211156200053657620005366200042b565b0290505b92915050565b60006200055160ff8416836200048a565b9392505050565b80820281158282048414176200053a576200053a6200042b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200059d57607f821691505b602082108103620005be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003eb57600081815260208120601f850160051c81016020861015620005ed5750805b601f850160051c820191505b818110156200060e57828155600101620005f9565b505050505050565b81516001600160401b0381111562000632576200063262000572565b6200064a8162000643845462000588565b84620005c4565b602080601f831160018114620006825760008415620006695750858301515b600019600386901b1c1916600185901b1785556200060e565b600085815260208120601f198616915b82811015620006b35788860151825594840194600190910190840162000692565b5085821015620006d25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200053a576200053a6200042b565b610e5480620007086000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806339509351116100a25780638da5cb5b116100715780638da5cb5b1461021157806395d89b411461023c578063a457c2d714610244578063a9059cbb14610257578063dd62ed3e1461026a57600080fd5b806339509351146101af57806342966c68146101c257806370a08231146101d557806379cc6790146101fe57600080fd5b80631a18e707116100de5780631a18e7071461017057806323b872dd14610185578063313ce56714610198578063355274ea146101a757600080fd5b806306fdde0314610110578063095ea7b31461012e5780630ac168a11461015157806318160ddd14610168575b600080fd5b61011861027d565b6040516101259190610b73565b60405180910390f35b61014161013c366004610bdd565b61030f565b6040519015158152602001610125565b61015a60075481565b604051908152602001610125565b60025461015a565b61018361017e366004610c07565b61032f565b005b610141610193366004610c20565b6103b8565b60405160128152602001610125565b60055461015a565b6101416101bd366004610bdd565b6103dc565b6101836101d0366004610c07565b6103fe565b61015a6101e3366004610c5c565b6001600160a01b031660009081526020819052604090205490565b61018361020c366004610bdd565b61040b565b600654610224906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b610118610424565b610141610252366004610bdd565b610433565b610141610265366004610bdd565b6104ae565b61015a610278366004610c7e565b6104bc565b60606003805461028c90610cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610cb1565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b60003361031d81858561061e565b60019150505b92915050565b60025490565b6006546001600160a01b0316331461039c5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b60648201526084015b60405180910390fd5b6103a86012600a610de5565b6103b29082610df4565b60075550565b6000336103c6858285610742565b6103d18585856107bc565b506001949350505050565b60003361031d8185856103ef83836104bc565b6103f99190610e0b565b61061e565b610408338261096b565b50565b610416823383610742565b610420828261096b565b5050565b60606004805461028c90610cb1565b6000338161044182866104bc565b9050838110156104a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610393565b6103d1828686840361061e565b60003361031d8185856107bc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554816104f460025490565b6104fe9190610e0b565b11156105485760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b6044820152606401610393565b61042082825b6001600160a01b0382166105a45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610393565b6105b060008383610aa9565b80600260008282546105c29190610e0b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6001600160a01b0383166106805760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610393565b6001600160a01b0382166106e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610393565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061074e84846104bc565b905060001981146107b657818110156107a95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610393565b6107b6848484840361061e565b50505050565b6001600160a01b0383166108205760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610393565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610393565b61088d838383610aa9565b6001600160a01b038316600090815260208190526040902054818110156109055760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610393565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107b6565b6001600160a01b0382166109cb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610393565b6109d782600083610aa9565b6001600160a01b03821660009081526020819052604090205481811015610a4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610393565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b03831615801590610aca57506001600160a01b0382164114155b8015610ad557504115155b8015610af25750600554600754600254610aef9190610e0b565b11155b1561061957610619610b0641600754610b08565b565b60055481610b1560025490565b610b1f9190610e0b565b1115610b695760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b6044820152606401610393565b61042082826104e7565b600060208083528351808285015260005b81811015610ba057858101830151858201604001528201610b84565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bd857600080fd5b919050565b60008060408385031215610bf057600080fd5b610bf983610bc1565b946020939093013593505050565b600060208284031215610c1957600080fd5b5035919050565b600080600060608486031215610c3557600080fd5b610c3e84610bc1565b9250610c4c60208501610bc1565b9150604084013590509250925092565b600060208284031215610c6e57600080fd5b610c7782610bc1565b9392505050565b60008060408385031215610c9157600080fd5b610c9a83610bc1565b9150610ca860208401610bc1565b90509250929050565b600181811c90821680610cc557607f821691505b602082108103610ce557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d3c578160001904821115610d2257610d22610ceb565b80851615610d2f57918102915b93841c9390800290610d06565b509250929050565b600082610d5357506001610323565b81610d6057506000610323565b8160018114610d765760028114610d8057610d9c565b6001915050610323565b60ff841115610d9157610d91610ceb565b50506001821b610323565b5060208310610133831016604e8410600b8410161715610dbf575081810a610323565b610dc98383610d01565b8060001904821115610ddd57610ddd610ceb565b029392505050565b6000610c7760ff841683610d44565b808202811582820484141761032357610323610ceb565b8082018082111561032357610323610ceb56fea2646970667358221220b5da1a0032d328a2e7d1ff568161da880bf72cf2eebe9b5a1065b5ba1a36490364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x155C CODESIZE SUB DUP1 PUSH3 0x155C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x406 JUMP JUMPDEST PUSH3 0x42 PUSH1 0x12 PUSH1 0xA PUSH3 0x540 JUMP JUMPDEST PUSH3 0x4E SWAP1 DUP4 PUSH3 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4E616D65 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x14DE5B589BDB PUSH1 0xD2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x9B SWAP2 SWAP1 PUSH3 0x616 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xAA DUP3 DUP3 PUSH3 0x616 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 GT PUSH3 0x103 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020697320300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x14A SWAP1 PUSH3 0x129 PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH3 0x136 SWAP1 PUSH1 0xA PUSH3 0x540 JUMP JUMPDEST PUSH3 0x144 SWAP1 PUSH2 0x3E8 PUSH3 0x558 JUMP JUMPDEST PUSH3 0x170 JUMP JUMPDEST PUSH3 0x158 PUSH1 0x12 PUSH1 0xA PUSH3 0x540 JUMP JUMPDEST PUSH3 0x164 SWAP1 DUP3 PUSH3 0x558 JUMP JUMPDEST PUSH1 0x7 SSTORE POP PUSH3 0x6F8 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH3 0x189 PUSH3 0x200 PUSH1 0x20 SHL PUSH3 0x329 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x195 SWAP2 SWAP1 PUSH3 0x6E2 JUMP JUMPDEST GT ISZERO PUSH3 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xFA JUMP JUMPDEST PUSH3 0x1FC DUP3 DUP3 PUSH3 0x206 PUSH1 0x20 SHL PUSH3 0x4E7 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH3 0x21F PUSH3 0x200 PUSH1 0x20 SHL PUSH3 0x329 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x22B SWAP2 SWAP1 PUSH3 0x6E2 JUMP JUMPDEST GT ISZERO PUSH3 0x27B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xFA JUMP JUMPDEST PUSH3 0x1FC DUP3 DUP3 PUSH3 0x292 PUSH1 0x20 SHL PUSH3 0x54E OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xFA JUMP JUMPDEST PUSH3 0x2F8 PUSH1 0x0 DUP4 DUP4 PUSH3 0x363 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x30C SWAP2 SWAP1 PUSH3 0x6E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH3 0x385 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND COINBASE EQ ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x391 JUMPI POP COINBASE ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH3 0x3C3 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH3 0x3B4 PUSH3 0x200 PUSH1 0x20 SHL PUSH3 0x329 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3C0 SWAP2 SWAP1 PUSH3 0x6E2 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH3 0x3D3 JUMPI PUSH3 0x3D3 PUSH3 0x3F0 JUMP JUMPDEST PUSH3 0x3EB DUP4 DUP4 DUP4 PUSH3 0x3EB PUSH1 0x20 SHL PUSH3 0x619 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x404 COINBASE PUSH1 0x7 SLOAD PUSH3 0x170 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x482 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x466 JUMPI PUSH3 0x466 PUSH3 0x42B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x474 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x446 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x49B JUMPI POP PUSH1 0x1 PUSH3 0x53A JUMP JUMPDEST DUP2 PUSH3 0x4AA JUMPI POP PUSH1 0x0 PUSH3 0x53A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4C3 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4CE JUMPI PUSH3 0x4EE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x53A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x4E2 JUMPI PUSH3 0x4E2 PUSH3 0x42B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x53A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x513 JUMPI POP DUP2 DUP2 EXP PUSH3 0x53A JUMP JUMPDEST PUSH3 0x51F DUP4 DUP4 PUSH3 0x441 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x536 JUMPI PUSH3 0x536 PUSH3 0x42B JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x551 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x48A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x53A JUMPI PUSH3 0x53A PUSH3 0x42B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x59D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5BE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3EB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x5ED JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x60E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5F9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x632 JUMPI PUSH3 0x632 PUSH3 0x572 JUMP JUMPDEST PUSH3 0x64A DUP2 PUSH3 0x643 DUP5 SLOAD PUSH3 0x588 JUMP JUMPDEST DUP5 PUSH3 0x5C4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x682 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x669 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x60E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6B3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x692 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x6D2 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x53A JUMPI PUSH3 0x53A PUSH3 0x42B JUMP JUMPDEST PUSH2 0xE54 DUP1 PUSH3 0x708 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A18E707 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x1A18E707 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xAC168A1 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xC20 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x141 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x224 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xCB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B8 SWAP1 PUSH2 0xCB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x305 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x305 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x31D DUP2 DUP6 DUP6 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31BA34B7B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A8 PUSH1 0x12 PUSH1 0xA PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x3B2 SWAP1 DUP3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C6 DUP6 DUP3 DUP6 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x3D1 DUP6 DUP6 DUP6 PUSH2 0x7BC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x31D DUP2 DUP6 DUP6 PUSH2 0x3EF DUP4 DUP4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x408 CALLER DUP3 PUSH2 0x96B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x416 DUP3 CALLER DUP4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x420 DUP3 DUP3 PUSH2 0x96B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x441 DUP3 DUP7 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x3D1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x31D DUP2 DUP6 DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH2 0x4F4 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x115490CC8C10D85C1C19590E8818D85C08195E18D959591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x420 DUP3 DUP3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x5B0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xAA9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74E DUP5 DUP5 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x61E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x88D DUP4 DUP4 DUP4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x9D7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xACA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND COINBASE EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI POP COINBASE ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAF2 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x2 SLOAD PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0xB06 COINBASE PUSH1 0x7 SLOAD PUSH2 0xB08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH2 0xB15 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x115490CC8C10D85C1C19590E8818D85C08195E18D959591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x420 DUP3 DUP3 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB84 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF9 DUP4 PUSH2 0xBC1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3E DUP5 PUSH2 0xBC1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC4C PUSH1 0x20 DUP6 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC77 DUP3 PUSH2 0xBC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9A DUP4 PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA8 PUSH1 0x20 DUP5 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD3C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD22 PUSH2 0xCEB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xD2F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD06 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD53 JUMPI POP PUSH1 0x1 PUSH2 0x323 JUMP JUMPDEST DUP2 PUSH2 0xD60 JUMPI POP PUSH1 0x0 PUSH2 0x323 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD76 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD80 JUMPI PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x323 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD91 PUSH2 0xCEB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x323 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xDBF JUMPI POP DUP2 DUP2 EXP PUSH2 0x323 JUMP JUMPDEST PUSH2 0xDC9 DUP4 DUP4 PUSH2 0xD01 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDDD JUMPI PUSH2 0xDDD PUSH2 0xCEB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xD44 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x323 JUMPI PUSH2 0x323 PUSH2 0xCEB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x323 JUMPI PUSH2 0x323 PUSH2 0xCEB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xDA BYTE STOP ORIGIN 0xD3 0x28 LOG2 0xE7 0xD1 SELFDESTRUCT JUMP DUP2 PUSH2 0xDA88 SIGNEXTEND 0xF7 0x2C CALLCODE 0xEE 0xBE SWAP12 GAS LT PUSH6 0xB5BA1A364903 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "457:1315:0:-:0;;;579:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;663:16;3186:2:1;663::0;:16;:::i;:::-;656:24;;:3;:24;:::i;:::-;1980:113:1;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:1;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;491:1:4;484:4;:8;476:42;;;;-1:-1:-1;;;476:42:4;;4875:2:7;476:42:4;;;4857:21:7;4914:2;4894:18;;;4887:30;4953:23;4933:18;;;4926:51;4994:18;;476:42:4;;;;;;;;;528:4;:11;693:5:0::2;:27:::0;;-1:-1:-1;;;;;;693:27:0::2;709:10;693:27:::0;;::::2;::::0;;;731:39:::2;::::0;758:10:::2;3186:2:1::0;;3104:91;758:10:0::2;752:16;::::0;:2:::2;:16;:::i;:::-;744:25;::::0;:4:::2;:25;:::i;:::-;731:5;:39::i;:::-;805:16;3186:2:1::0;805::0::2;:16;:::i;:::-;795:27;::::0;:6;:27:::2;:::i;:::-;781:11;:41:::0;-1:-1:-1;457:1315:0;;-1:-1:-1;457:1315:0;838:227;695:4:4;;973:6:0;951:19;:17;;;;;:19;;:::i;:::-;:28;;;;:::i;:::-;:37;;943:75;;;;-1:-1:-1;;;943:75:0;;5355:2:7;943:75:0;;;5337:21:7;5394:2;5374:18;;;5367:30;5433:27;5413:18;;;5406:55;5478:18;;943:75:0;5153:349:7;943:75:0;1029:28;1041:7;1050:6;1029:11;;;;;:28;;:::i;:::-;838:227;;:::o;3255:106:1:-;3342:12;;;3255:106::o;759:204:4:-;695:4;;873:6;851:19;:17;;;;;:19;;:::i;:::-;:28;;;;:::i;:::-;:37;;843:75;;;;-1:-1:-1;;;843:75:4;;5355:2:7;843:75:4;;;5337:21:7;5394:2;5374:18;;;5367:30;5433:27;5413:18;;;5406:55;5478:18;;843:75:4;5153:349:7;843:75:4;928:28;940:7;949:6;928:11;;;;;:28;;:::i;8520:535:1:-;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;5709:2:7;8595:65:1;;;5691:21:7;5748:2;5728:18;;;5721:30;5787:33;5767:18;;;5760:61;5838:18;;8595:65:1;5507:355:7;8595:65:1;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;6013:25:7;;;8952:37:1;;5986:18:7;8952:37:1;;;;;;;838:227:0;;:::o;1171:339::-;-1:-1:-1;;;;;1282:18:0;;;;;;:42;;-1:-1:-1;;;;;;1304:20:0;;1310:14;1304:20;;1282:42;:74;;;;-1:-1:-1;1328:14:0;:28;;1282:74;:120;;;;-1:-1:-1;695:4:4;;1382:11:0;;1360:19;:17;;;;;:19;;:::i;:::-;:33;;;;:::i;:::-;:42;;1282:120;1279:170;;;1419:18;:16;:18::i;:::-;1459:43;1486:4;1492:2;1496:5;1459:26;;;;;:43;;:::i;:::-;1171:339;;;:::o;1073:90::-;1121:34;1127:14;1143:11;;1121:5;;;:34;;:::i;:::-;1073:90::o;14:245:7:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:7;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:7:o;264:127::-;325:10;320:3;316:20;313:1;306:31;356:4;353:1;346:15;380:4;377:1;370:15;396:422;485:1;528:5;485:1;542:270;563:7;553:8;550:21;542:270;;;622:4;618:1;614:6;610:17;604:4;601:27;598:53;;;631:18;;:::i;:::-;681:7;671:8;667:22;664:55;;;701:16;;;;664:55;780:22;;;;740:15;;;;542:270;;;546:3;396:422;;;;;:::o;823:806::-;872:5;902:8;892:80;;-1:-1:-1;943:1:7;957:5;;892:80;991:4;981:76;;-1:-1:-1;1028:1:7;1042:5;;981:76;1073:4;1091:1;1086:59;;;;1159:1;1154:130;;;;1066:218;;1086:59;1116:1;1107:10;;1130:5;;;1154:130;1191:3;1181:8;1178:17;1175:43;;;1198:18;;:::i;:::-;-1:-1:-1;;1254:1:7;1240:16;;1269:5;;1066:218;;1368:2;1358:8;1355:16;1349:3;1343:4;1340:13;1336:36;1330:2;1320:8;1317:16;1312:2;1306:4;1303:12;1299:35;1296:77;1293:159;;;-1:-1:-1;1405:19:7;;;1437:5;;1293:159;1484:34;1509:8;1503:4;1484:34;:::i;:::-;1554:6;1550:1;1546:6;1542:19;1533:7;1530:32;1527:58;;;1565:18;;:::i;:::-;1603:20;;-1:-1:-1;823:806:7;;;;;:::o;1634:140::-;1692:5;1721:47;1762:4;1752:8;1748:19;1742:4;1721:47;:::i;:::-;1712:56;1634:140;-1:-1:-1;;;1634:140:7:o;1779:168::-;1852:9;;;1883;;1900:15;;;1894:22;;1880:37;1870:71;;1921:18;;:::i;1952:127::-;2013:10;2008:3;2004:20;2001:1;1994:31;2044:4;2041:1;2034:15;2068:4;2065:1;2058:15;2084:380;2163:1;2159:12;;;;2206;;;2227:61;;2281:4;2273:6;2269:17;2259:27;;2227:61;2334:2;2326:6;2323:14;2303:18;2300:38;2297:161;;2380:10;2375:3;2371:20;2368:1;2361:31;2415:4;2412:1;2405:15;2443:4;2440:1;2433:15;2297:161;;2084:380;;;:::o;2595:545::-;2697:2;2692:3;2689:11;2686:448;;;2733:1;2758:5;2754:2;2747:17;2803:4;2799:2;2789:19;2873:2;2861:10;2857:19;2854:1;2850:27;2844:4;2840:38;2909:4;2897:10;2894:20;2891:47;;;-1:-1:-1;2932:4:7;2891:47;2987:2;2982:3;2978:12;2975:1;2971:20;2965:4;2961:31;2951:41;;3042:82;3060:2;3053:5;3050:13;3042:82;;;3105:17;;;3086:1;3075:13;3042:82;;;3046:3;;;2595:545;;;:::o;3316:1352::-;3436:10;;-1:-1:-1;;;;;3458:30:7;;3455:56;;;3491:18;;:::i;:::-;3520:97;3610:6;3570:38;3602:4;3596:11;3570:38;:::i;:::-;3564:4;3520:97;:::i;:::-;3672:4;;3736:2;3725:14;;3753:1;3748:663;;;;4455:1;4472:6;4469:89;;;-1:-1:-1;4524:19:7;;;4518:26;4469:89;-1:-1:-1;;3273:1:7;3269:11;;;3265:24;3261:29;3251:40;3297:1;3293:11;;;3248:57;4571:81;;3718:944;;3748:663;2542:1;2535:14;;;2579:4;2566:18;;-1:-1:-1;;3784:20:7;;;3902:236;3916:7;3913:1;3910:14;3902:236;;;4005:19;;;3999:26;3984:42;;4097:27;;;;4065:1;4053:14;;;;3932:19;;3902:236;;;3906:3;4166:6;4157:7;4154:19;4151:201;;;4227:19;;;4221:26;-1:-1:-1;;4310:1:7;4306:14;;;4322:3;4302:24;4298:37;4294:42;4279:58;4264:74;;4151:201;-1:-1:-1;;;;;4398:1:7;4382:14;;;4378:22;4365:36;;-1:-1:-1;3316:1352:7:o;5023:125::-;5088:9;;;5109:10;;;5106:36;;;5122:18;;:::i;5867:177::-;457:1315:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_771": {
									"entryPoint": null,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_706": {
									"entryPoint": 1566,
									"id": 706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_154": {
									"entryPoint": 2729,
									"id": 154,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_760": {
									"entryPoint": 1561,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_661": {
									"entryPoint": 2411,
									"id": 661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mintMinerReward_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_589": {
									"entryPoint": 1358,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_92": {
									"entryPoint": 2824,
									"id": 92,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_958": {
									"entryPoint": 1255,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_996": {
									"entryPoint": null,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_749": {
									"entryPoint": 1858,
									"id": 749,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_532": {
									"entryPoint": 1980,
									"id": 532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_327": {
									"entryPoint": 1212,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_352": {
									"entryPoint": 783,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_284": {
									"entryPoint": null,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockReward_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_893": {
									"entryPoint": 1035,
									"id": 893,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_872": {
									"entryPoint": 1022,
									"id": 872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cap_929": {
									"entryPoint": null,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_260": {
									"entryPoint": null,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_455": {
									"entryPoint": 1075,
									"id": 455,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_414": {
									"entryPoint": 988,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_240": {
									"entryPoint": 637,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlockReward_172": {
									"entryPoint": 815,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_250": {
									"entryPoint": 1060,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": 809,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_385": {
									"entryPoint": 952,
									"id": 385,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_309": {
									"entryPoint": 1198,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9679:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1469:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1478:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1465:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1465:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1490:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1461:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1461:32:7"
															},
															"nodeType": "YulIf",
															"src": "1458:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1542:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1529:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1414:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1425:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1437:6:7",
														"type": ""
													}
												],
												"src": "1378:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1667:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1713:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1725:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1715:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1715:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1715:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1688:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1697:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:32:7"
															},
															"nodeType": "YulIf",
															"src": "1677:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1738:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1767:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1748:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1786:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1819:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1830:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1796:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1843:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1870:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1881:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1866:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1853:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1843:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1617:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1628:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1640:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1648:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1656:6:7",
														"type": ""
													}
												],
												"src": "1563:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2003:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2015:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2045:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2068:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2038:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2038:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1962:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1973:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1984:4:7",
														"type": ""
													}
												],
												"src": "1896:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:7"
															},
															"nodeType": "YulIf",
															"src": "2165:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:7",
														"type": ""
													}
												],
												"src": "2085:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2393:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2403:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2415:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2426:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2403:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2445:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2460:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2476:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2481:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2472:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2472:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2485:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2468:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2468:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2456:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2456:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2438:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2438:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2362:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2373:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2384:4:7",
														"type": ""
													}
												],
												"src": "2276:219:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2587:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2633:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2642:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2645:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2635:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2635:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2635:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2608:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2617:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:32:7"
															},
															"nodeType": "YulIf",
															"src": "2597:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2658:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2668:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2706:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2739:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2750:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2735:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2716:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2545:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2556:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2568:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2576:6:7",
														"type": ""
													}
												],
												"src": "2500:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2830:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2844:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2847:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2840:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2840:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2861:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2891:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2865:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2938:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2940:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2954:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2962:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2950:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2950:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2940:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2918:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:26:7"
															},
															"nodeType": "YulIf",
															"src": "2908:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3028:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3049:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3056:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3061:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3052:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3052:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3042:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3042:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3096:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3086:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3086:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3086:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3121:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3114:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2984:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3015:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3004:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2981:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:38:7"
															},
															"nodeType": "YulIf",
															"src": "2978:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2800:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2809:6:7",
														"type": ""
													}
												],
												"src": "2765:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3341:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3334:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3386:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3371:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3364:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3364:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3414:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3425:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:18:7"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3430:34:7",
																		"type": "",
																		"value": "Only the owner can call this fun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3496:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3481:18:7"
																	},
																	{
																		"hexValue": "6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3501:7:7",
																		"type": "",
																		"value": "ction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3474:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3518:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3530:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3541:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3526:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3518:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3301:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3315:4:7",
														"type": ""
													}
												],
												"src": "3150:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3588:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3612:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3617:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3598:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3598:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3598:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3645:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3648:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3638:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3669:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3672:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3662:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3556:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3752:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3762:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3777:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3766:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "3796:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3787:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3812:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3820:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3812:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3876:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3921:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3923:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3923:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3923:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3896:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3910:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3906:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3906:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3914:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3902:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3902:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3893:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3893:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3890:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3982:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3984:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3997:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "4004:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3993:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3993:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3984:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3963:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3973:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3959:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3959:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "3956:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4024:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4036:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4042:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "4032:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4032:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "4024:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4060:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "4076:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4085:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4072:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4072:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4060:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3845:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3855:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3842:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3864:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3838:3:7",
																"statements": []
															},
															"src": "3834:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3716:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3723:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3736:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3743:4:7",
														"type": ""
													}
												],
												"src": "3688:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4212:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4226:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4235:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4226:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4249:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4194:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:16:7"
															},
															"nodeType": "YulIf",
															"src": "4184:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4297:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4311:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4320:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4311:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4334:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4283:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:12:7"
															},
															"nodeType": "YulIf",
															"src": "4273:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4385:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "4399:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4399:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4422:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4378:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4383:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4453:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4488:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "4490:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4490:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4490:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4473:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4483:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "4470:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4470:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4467:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "4523:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4536:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4546:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4532:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4523:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4561:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4446:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "4365:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "4358:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4674:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4688:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4701:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4707:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4697:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4697:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4688:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4729:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4598:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4604:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4595:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4595:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4612:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4622:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4609:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4609:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4591:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4635:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4641:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4632:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4632:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4650:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4660:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4647:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4647:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4628:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4588:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:77:7"
															},
															"nodeType": "YulIf",
															"src": "4585:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4753:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4795:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4801:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "4776:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "4757:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "4766:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4855:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4857:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4857:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4857:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4825:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4842:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4838:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4838:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4846:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4834:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4834:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4822:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:32:7"
															},
															"nodeType": "YulIf",
															"src": "4819:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4886:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4899:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4908:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4895:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4895:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4886:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4145:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4151:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4164:5:7",
														"type": ""
													}
												],
												"src": "4115:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4994:72:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5004:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5034:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "5044:8:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5054:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5040:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "5013:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5004:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4965:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4971:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4984:5:7",
														"type": ""
													}
												],
												"src": "4926:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5123:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5133:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5148:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5151:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5133:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5211:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5213:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5213:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5213:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5182:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5175:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5175:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5189:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5196:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5205:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5192:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5192:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5186:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5186:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5172:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5172:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:45:7"
															},
															"nodeType": "YulIf",
															"src": "5162:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5102:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5105:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5111:7:7",
														"type": ""
													}
												],
												"src": "5071:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5292:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5302:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5313:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5316:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5309:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5341:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5343:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5343:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5343:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5333:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5336:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5330:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5330:10:7"
															},
															"nodeType": "YulIf",
															"src": "5327:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5275:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5278:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5284:3:7",
														"type": ""
													}
												],
												"src": "5244:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5548:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5558:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5615:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5588:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5638:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5649:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5634:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5654:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5627:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5720:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5725:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5698:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5698:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5742:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5765:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5750:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5742:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5539:4:7",
														"type": ""
													}
												],
												"src": "5374:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5954:175:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5971:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5964:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5994:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5994:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6044:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6055:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:18:7"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6060:27:7",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6033:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6097:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6109:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6120:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6105:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6105:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6097:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5931:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5945:4:7",
														"type": ""
													}
												],
												"src": "5780:349:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6308:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6325:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6318:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6359:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6370:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6355:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6375:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6348:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6398:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6409:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6394:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6414:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6387:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6387:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6387:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6457:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6469:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6465:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6465:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6457:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6285:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6299:4:7",
														"type": ""
													}
												],
												"src": "6134:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6668:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6685:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6678:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6719:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6730:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6758:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6769:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6754:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6754:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6774:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6747:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6829:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6840:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6825:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6825:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6845:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6818:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6818:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6818:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6861:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6873:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6884:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6869:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6861:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6645:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6659:4:7",
														"type": ""
													}
												],
												"src": "6494:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7073:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7090:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7101:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7083:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7124:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7135:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7120:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7120:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7113:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7113:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7113:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7163:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7174:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7159:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7159:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7179:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7152:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7152:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7152:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7234:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7245:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7230:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7250:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7223:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7223:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7264:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7276:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7272:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7272:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7264:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7050:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7064:4:7",
														"type": ""
													}
												],
												"src": "6899:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7476:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7493:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7504:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7486:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7486:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7486:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7527:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7538:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7523:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7523:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7543:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7516:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7566:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7577:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7562:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7562:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7582:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7555:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7555:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7555:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7623:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7635:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7646:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7631:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7631:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7623:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7453:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7467:4:7",
														"type": ""
													}
												],
												"src": "7302:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7834:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7851:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7862:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7844:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7844:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7881:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7881:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7901:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7874:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7874:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7874:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7924:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7935:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7940:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7913:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7913:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7995:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8006:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7991:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7991:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8011:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7984:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7984:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8028:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8040:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8051:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8036:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8036:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8028:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7811:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7825:4:7",
														"type": ""
													}
												],
												"src": "7660:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8240:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8257:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8268:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8250:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8250:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8291:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8302:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8287:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8287:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8307:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8280:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8280:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8341:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8326:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8346:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8319:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8319:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8319:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8417:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8390:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8390:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8390:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8432:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8444:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8455:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8440:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8440:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8432:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8217:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8231:4:7",
														"type": ""
													}
												],
												"src": "8066:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8644:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8661:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8672:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8654:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8654:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8654:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8695:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8706:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8691:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8691:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8711:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8684:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8684:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8730:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8750:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8723:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8723:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8816:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8821:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8794:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8839:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8851:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8847:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8847:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8839:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8621:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8635:4:7",
														"type": ""
													}
												],
												"src": "8470:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9051:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9068:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9079:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9061:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9061:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9061:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9102:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9113:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9098:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9098:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9118:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9091:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9091:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9091:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9141:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9152:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9137:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9137:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9157:34:7",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9130:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9130:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9212:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9223:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9208:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9208:18:7"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9228:3:7",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9201:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9201:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9241:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9253:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9264:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9249:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9241:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9028:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9042:4:7",
														"type": ""
													}
												],
												"src": "8877:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9453:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9470:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9481:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9463:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9463:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9463:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9504:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9515:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9500:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9500:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9493:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9493:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9543:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9554:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9539:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9539:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9559:34:7",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9532:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9625:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9610:18:7"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9630:4:7",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9603:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9430:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9444:4:7",
														"type": ""
													}
												],
												"src": "9279:398:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Only the owner can call this fun\")\n        mstore(add(headStart, 96), \"ction\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806339509351116100a25780638da5cb5b116100715780638da5cb5b1461021157806395d89b411461023c578063a457c2d714610244578063a9059cbb14610257578063dd62ed3e1461026a57600080fd5b806339509351146101af57806342966c68146101c257806370a08231146101d557806379cc6790146101fe57600080fd5b80631a18e707116100de5780631a18e7071461017057806323b872dd14610185578063313ce56714610198578063355274ea146101a757600080fd5b806306fdde0314610110578063095ea7b31461012e5780630ac168a11461015157806318160ddd14610168575b600080fd5b61011861027d565b6040516101259190610b73565b60405180910390f35b61014161013c366004610bdd565b61030f565b6040519015158152602001610125565b61015a60075481565b604051908152602001610125565b60025461015a565b61018361017e366004610c07565b61032f565b005b610141610193366004610c20565b6103b8565b60405160128152602001610125565b60055461015a565b6101416101bd366004610bdd565b6103dc565b6101836101d0366004610c07565b6103fe565b61015a6101e3366004610c5c565b6001600160a01b031660009081526020819052604090205490565b61018361020c366004610bdd565b61040b565b600654610224906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b610118610424565b610141610252366004610bdd565b610433565b610141610265366004610bdd565b6104ae565b61015a610278366004610c7e565b6104bc565b60606003805461028c90610cb1565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610cb1565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b60003361031d81858561061e565b60019150505b92915050565b60025490565b6006546001600160a01b0316331461039c5760405162461bcd60e51b815260206004820152602560248201527f4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e60448201526431ba34b7b760d91b60648201526084015b60405180910390fd5b6103a86012600a610de5565b6103b29082610df4565b60075550565b6000336103c6858285610742565b6103d18585856107bc565b506001949350505050565b60003361031d8185856103ef83836104bc565b6103f99190610e0b565b61061e565b610408338261096b565b50565b610416823383610742565b610420828261096b565b5050565b60606004805461028c90610cb1565b6000338161044182866104bc565b9050838110156104a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610393565b6103d1828686840361061e565b60003361031d8185856107bc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600554816104f460025490565b6104fe9190610e0b565b11156105485760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b6044820152606401610393565b61042082825b6001600160a01b0382166105a45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610393565b6105b060008383610aa9565b80600260008282546105c29190610e0b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6001600160a01b0383166106805760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610393565b6001600160a01b0382166106e15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610393565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061074e84846104bc565b905060001981146107b657818110156107a95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610393565b6107b6848484840361061e565b50505050565b6001600160a01b0383166108205760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610393565b6001600160a01b0382166108825760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610393565b61088d838383610aa9565b6001600160a01b038316600090815260208190526040902054818110156109055760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610393565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107b6565b6001600160a01b0382166109cb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610393565b6109d782600083610aa9565b6001600160a01b03821660009081526020819052604090205481811015610a4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610393565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b03831615801590610aca57506001600160a01b0382164114155b8015610ad557504115155b8015610af25750600554600754600254610aef9190610e0b565b11155b1561061957610619610b0641600754610b08565b565b60055481610b1560025490565b610b1f9190610e0b565b1115610b695760405162461bcd60e51b8152602060048201526019602482015278115490cc8c10d85c1c19590e8818d85c08195e18d959591959603a1b6044820152606401610393565b61042082826104e7565b600060208083528351808285015260005b81811015610ba057858101830151858201604001528201610b84565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bd857600080fd5b919050565b60008060408385031215610bf057600080fd5b610bf983610bc1565b946020939093013593505050565b600060208284031215610c1957600080fd5b5035919050565b600080600060608486031215610c3557600080fd5b610c3e84610bc1565b9250610c4c60208501610bc1565b9150604084013590509250925092565b600060208284031215610c6e57600080fd5b610c7782610bc1565b9392505050565b60008060408385031215610c9157600080fd5b610c9a83610bc1565b9150610ca860208401610bc1565b90509250929050565b600181811c90821680610cc557607f821691505b602082108103610ce557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610d3c578160001904821115610d2257610d22610ceb565b80851615610d2f57918102915b93841c9390800290610d06565b509250929050565b600082610d5357506001610323565b81610d6057506000610323565b8160018114610d765760028114610d8057610d9c565b6001915050610323565b60ff841115610d9157610d91610ceb565b50506001821b610323565b5060208310610133831016604e8410600b8410161715610dbf575081810a610323565b610dc98383610d01565b8060001904821115610ddd57610ddd610ceb565b029392505050565b6000610c7760ff841683610d44565b808202811582820484141761032357610323610ceb565b8082018082111561032357610323610ceb56fea2646970667358221220b5da1a0032d328a2e7d1ff568161da880bf72cf2eebe9b5a1065b5ba1a36490364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A18E707 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x1A18E707 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xAC168A1 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x15A PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xC20 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x15A JUMP JUMPDEST PUSH2 0x141 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x224 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x424 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x15A PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xCB1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B8 SWAP1 PUSH2 0xCB1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x305 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x305 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x31D DUP2 DUP6 DUP6 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x31BA34B7B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A8 PUSH1 0x12 PUSH1 0xA PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x3B2 SWAP1 DUP3 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x7 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C6 DUP6 DUP3 DUP6 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x3D1 DUP6 DUP6 DUP6 PUSH2 0x7BC JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x31D DUP2 DUP6 DUP6 PUSH2 0x3EF DUP4 DUP4 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x408 CALLER DUP3 PUSH2 0x96B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x416 DUP3 CALLER DUP4 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x420 DUP3 DUP3 PUSH2 0x96B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xCB1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x441 DUP3 DUP7 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x3D1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x31D DUP2 DUP6 DUP6 PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH2 0x4F4 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x115490CC8C10D85C1C19590E8818D85C08195E18D959591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x420 DUP3 DUP3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x5B0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xAA9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74E DUP5 DUP5 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x61E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x88D DUP4 DUP4 DUP4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x9D7 DUP3 PUSH1 0x0 DUP4 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xACA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND COINBASE EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI POP COINBASE ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAF2 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x7 SLOAD PUSH1 0x2 SLOAD PUSH2 0xAEF SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x619 JUMPI PUSH2 0x619 PUSH2 0xB06 COINBASE PUSH1 0x7 SLOAD PUSH2 0xB08 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 PUSH2 0xB15 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x115490CC8C10D85C1C19590E8818D85C08195E18D959591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x393 JUMP JUMPDEST PUSH2 0x420 DUP3 DUP3 PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB84 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF9 DUP4 PUSH2 0xBC1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC3E DUP5 PUSH2 0xBC1 JUMP JUMPDEST SWAP3 POP PUSH2 0xC4C PUSH1 0x20 DUP6 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC77 DUP3 PUSH2 0xBC1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9A DUP4 PUSH2 0xBC1 JUMP JUMPDEST SWAP2 POP PUSH2 0xCA8 PUSH1 0x20 DUP5 ADD PUSH2 0xBC1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xCC5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCE5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xD3C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD22 PUSH2 0xCEB JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xD2F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD06 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD53 JUMPI POP PUSH1 0x1 PUSH2 0x323 JUMP JUMPDEST DUP2 PUSH2 0xD60 JUMPI POP PUSH1 0x0 PUSH2 0x323 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD76 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD80 JUMPI PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x323 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD91 JUMPI PUSH2 0xD91 PUSH2 0xCEB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x323 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xDBF JUMPI POP DUP2 DUP2 EXP PUSH2 0x323 JUMP JUMPDEST PUSH2 0xDC9 DUP4 DUP4 PUSH2 0xD01 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDDD JUMPI PUSH2 0xDDD PUSH2 0xCEB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC77 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xD44 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x323 JUMPI PUSH2 0x323 PUSH2 0xCEB JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x323 JUMPI PUSH2 0x323 PUSH2 0xCEB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xDA BYTE STOP ORIGIN 0xD3 0x28 LOG2 0xE7 0xD1 SELFDESTRUCT JUMP DUP2 PUSH2 0xDA88 SIGNEXTEND 0xF7 0x2C CALLCODE 0xEE 0xBE SWAP12 GAS LT PUSH6 0xB5BA1A364903 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "457:1315:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;4444:197:1;1004:187:7;544:26:0;;;;;;;;;1342:25:7;;;1330:2;1315:18;544:26:0;1196:177:7;3255:106:1;3342:12;;3255:106;;1518:117:0;;;;;;:::i;:::-;;:::i;:::-;;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;2038:36:7;;2026:2;2011:18;3104:91:1;1896:184:7;625:81:4;695:4;;625:81;;5854:234:1;;;;;;:::i;:::-;;:::i;578:89:3:-;;;;;;:::i;:::-;;:::i;3419:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;973:161:3;;;;;;:::i;:::-;;:::i;509:28:0:-;;;;;-1:-1:-1;;;;;509:28:0;;;;;;-1:-1:-1;;;;;2456:32:7;;;2438:51;;2426:2;2411:18;509:28:0;2276:219:7;2369:102:1;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:6;4581:32:1;734:10:6;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;3255:106::-;3342:12;;;3255:106::o;1518:117:0:-;1702:5;;-1:-1:-1;;;;;1702:5:0;1688:10;:19;1680:69;;;;-1:-1:-1;;;1680:69:0;;3352:2:7;1680:69:0;;;3334:21:7;3391:2;3371:18;;;3364:30;3430:34;3410:18;;;3403:62;-1:-1:-1;;;3481:18:7;;;3474:35;3526:19;;1680:69:0;;;;;;;;;1610:16:::1;3186:2:1::0;1610::0::1;:16;:::i;:::-;1600:27;::::0;:6;:27:::1;:::i;:::-;1586:11;:41:::0;-1:-1:-1;1518:117:0:o;5203:256:1:-;5300:4;734:10:6;5356:38:1;5372:4;734:10:6;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;734:10:6;5996:64:1;734:10:6;6012:7:1;6049:10;6021:25;734:10:6;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;578:89:3:-;633:27;734:10:6;653:6:3;633:5;:27::i;:::-;578:89;:::o;973:161::-;1049:46;1065:7;734:10:6;1088:6:3;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;734:10:6;6668:4:1;6749:25;734:10:6;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;5576:2:7;6784:85:1;;;5558:21:7;5615:2;5595:18;;;5588:30;5654:34;5634:18;;;5627:62;-1:-1:-1;;;5705:18:7;;;5698:35;5750:19;;6784:85:1;5374:401:7;6784:85:1;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:6;3873:28:1;734:10:6;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;759:204:4:-;695:4;;873:6;851:19;3342:12:1;;;3255:106;851:19:4;:28;;;;:::i;:::-;:37;;843:75;;;;-1:-1:-1;;;843:75:4;;5982:2:7;843:75:4;;;5964:21:7;6021:2;6001:18;;;5994:30;-1:-1:-1;;;6040:18:7;;;6033:55;6105:18;;843:75:4;5780:349:7;843:75:4;928:28;940:7;949:6;8520:535:1;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;6336:2:7;8595:65:1;;;6318:21:7;6375:2;6355:18;;;6348:30;6414:33;6394:18;;;6387:61;6465:18;;8595:65:1;6134:355:7;8595:65:1;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:7;;;8952:37:1;;1315:18:7;8952:37:1;;;;;;;973:161:3;;:::o;12073:91:1:-;;;;:::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;6696:2:7;10550:68:1;;;6678:21:7;6735:2;6715:18;;;6708:30;6774:34;6754:18;;;6747:62;-1:-1:-1;;;6825:18:7;;;6818:34;6869:19;;10550:68:1;6494:400:7;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;7101:2:7;10628:68:1;;;7083:21:7;7140:2;7120:18;;;7113:30;7179:34;7159:18;;;7152:62;-1:-1:-1;;;7230:18:7;;;7223:32;7272:19;;10628:68:1;6899:398:7;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:7;;;10758:32:1;;1315:18:7;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;7504:2:7;11297:68:1;;;7486:21:7;7543:2;7523:18;;;7516:30;7582:31;7562:18;;;7555:59;7631:18;;11297:68:1;7302:353:7;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;7862:2:7;7544:68:1;;;7844:21:7;7901:2;7881:18;;;7874:30;7940:34;7920:18;;;7913:62;-1:-1:-1;;;7991:18:7;;;7984:35;8036:19;;7544:68:1;7660:401:7;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;8268:2:7;7622:64:1;;;8250:21:7;8307:2;8287:18;;;8280:30;8346:34;8326:18;;;8319:62;-1:-1:-1;;;8397:18:7;;;8390:33;8440:19;;7622:64:1;8066:399:7;7622:64:1;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;8672:2:7;7793:72:1;;;8654:21:7;8711:2;8691:18;;;8684:30;8750:34;8730:18;;;8723:62;-1:-1:-1;;;8801:18:7;;;8794:36;8847:19;;7793:72:1;8470:402:7;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:7;;;8114:13:1;;8163:26;;1315:18:7;8163:26:1;;;;;;;8200:37;12073:91;9375:659;-1:-1:-1;;;;;9458:21:1;;9450:67;;;;-1:-1:-1;;;9450:67:1;;9079:2:7;9450:67:1;;;9061:21:7;9118:2;9098:18;;;9091:30;9157:34;9137:18;;;9130:62;-1:-1:-1;;;9208:18:7;;;9201:31;9249:19;;9450:67:1;8877:397:7;9450:67:1;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:1;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:1;;9481:2:7;9641:71:1;;;9463:21:7;9520:2;9500:18;;;9493:30;9559:34;9539:18;;;9532:62;-1:-1:-1;;;9610:18:7;;;9603:32;9652:19;;9641:71:1;9279:398:7;9641:71:1;-1:-1:-1;;;;;9746:18:1;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1342:25:7;;;9746:9:1;;:18;9931:37;;1315:18:7;9931:37:1;;;;;;;12073:91;;;:::o;1171:339:0:-;-1:-1:-1;;;;;1282:18:0;;;;;;:42;;-1:-1:-1;;;;;;1304:20:0;;1310:14;1304:20;;1282:42;:74;;;;-1:-1:-1;1328:14:0;:28;;1282:74;:120;;;;-1:-1:-1;695:4:4;;1382:11:0;;3342:12:1;;1360:33:0;;;;:::i;:::-;:42;;1282:120;1279:170;;;1419:18;1121:34;1127:14;1143:11;;1121:5;:34::i;:::-;1073:90::o;838:227::-;695:4:4;;973:6:0;951:19;3342:12:1;;;3255:106;951:19:0;:28;;;;:::i;:::-;:37;;943:75;;;;-1:-1:-1;;;943:75:0;;5982:2:7;943:75:0;;;5964:21:7;6021:2;6001:18;;;5994:30;-1:-1:-1;;;6040:18:7;;;6033:55;6105:18;;943:75:0;5780:349:7;943:75:0;1029:28;1041:7;1050:6;1029:11;:28::i;14:548:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:180::-;1437:6;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;-1:-1:-1;1529:23:7;;1378:180;-1:-1:-1;1378:180:7:o;1563:328::-;1640:6;1648;1656;1709:2;1697:9;1688:7;1684:23;1680:32;1677:52;;;1725:1;1722;1715:12;1677:52;1748:29;1767:9;1748:29;:::i;:::-;1738:39;;1796:38;1830:2;1819:9;1815:18;1796:38;:::i;:::-;1786:48;;1881:2;1870:9;1866:18;1853:32;1843:42;;1563:328;;;;;:::o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:7:o;2500:260::-;2568:6;2576;2629:2;2617:9;2608:7;2604:23;2600:32;2597:52;;;2645:1;2642;2635:12;2597:52;2668:29;2687:9;2668:29;:::i;:::-;2658:39;;2716:38;2750:2;2739:9;2735:18;2716:38;:::i;:::-;2706:48;;2500:260;;;;;:::o;2765:380::-;2844:1;2840:12;;;;2887;;;2908:61;;2962:4;2954:6;2950:17;2940:27;;2908:61;3015:2;3007:6;3004:14;2984:18;2981:38;2978:161;;3061:10;3056:3;3052:20;3049:1;3042:31;3096:4;3093:1;3086:15;3124:4;3121:1;3114:15;2978:161;;2765:380;;;:::o;3556:127::-;3617:10;3612:3;3608:20;3605:1;3598:31;3648:4;3645:1;3638:15;3672:4;3669:1;3662:15;3688:422;3777:1;3820:5;3777:1;3834:270;3855:7;3845:8;3842:21;3834:270;;;3914:4;3910:1;3906:6;3902:17;3896:4;3893:27;3890:53;;;3923:18;;:::i;:::-;3973:7;3963:8;3959:22;3956:55;;;3993:16;;;;3956:55;4072:22;;;;4032:15;;;;3834:270;;;3838:3;3688:422;;;;;:::o;4115:806::-;4164:5;4194:8;4184:80;;-1:-1:-1;4235:1:7;4249:5;;4184:80;4283:4;4273:76;;-1:-1:-1;4320:1:7;4334:5;;4273:76;4365:4;4383:1;4378:59;;;;4451:1;4446:130;;;;4358:218;;4378:59;4408:1;4399:10;;4422:5;;;4446:130;4483:3;4473:8;4470:17;4467:43;;;4490:18;;:::i;:::-;-1:-1:-1;;4546:1:7;4532:16;;4561:5;;4358:218;;4660:2;4650:8;4647:16;4641:3;4635:4;4632:13;4628:36;4622:2;4612:8;4609:16;4604:2;4598:4;4595:12;4591:35;4588:77;4585:159;;;-1:-1:-1;4697:19:7;;;4729:5;;4585:159;4776:34;4801:8;4795:4;4776:34;:::i;:::-;4846:6;4842:1;4838:6;4834:19;4825:7;4822:32;4819:58;;;4857:18;;:::i;:::-;4895:20;;4115:806;-1:-1:-1;;;4115:806:7:o;4926:140::-;4984:5;5013:47;5054:4;5044:8;5040:19;5034:4;5013:47;:::i;5071:168::-;5144:9;;;5175;;5192:15;;;5186:22;;5172:37;5162:71;;5213:18;;:::i;5244:125::-;5309:9;;;5330:10;;;5327:36;;;5343:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "733600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22551",
								"balanceOf(address)": "1307",
								"blockReward()": "1063",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"cap()": "1081",
								"decimals()": "244",
								"decreaseAllowance(address,uint256)": "23616",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1059",
								"setBlockReward(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1082",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintMinerReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 579,
									"end": 830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 579,
									"end": 830,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 579,
									"end": 830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 663,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 663,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 663,
									"end": 679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 663,
									"end": 679,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 663,
									"end": 679,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 656,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 656,
									"end": 680,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 656,
									"end": 659,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 656,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 656,
									"end": 680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 680,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 656,
									"end": 680,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E616D65"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14DE5B589BDB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 484,
									"end": 492,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 476,
									"end": 518,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4875,
									"end": 4877,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4857,
									"end": 4878,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4914,
									"end": 4916,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 4894,
									"end": 4912,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4894,
									"end": 4912,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4894,
									"end": 4912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4887,
									"end": 4917,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4953,
									"end": 4976,
									"name": "PUSH",
									"source": 7,
									"value": "45524332304361707065643A2063617020697320300000000000000000000000"
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4926,
									"end": 4977,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4994,
									"end": 5012,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4994,
									"end": 5012,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 476,
									"end": 518,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 476,
									"end": 518,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 476,
									"end": 518,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 528,
									"end": 532,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 528,
									"end": 539,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 693,
									"end": 698,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 693,
									"end": 720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 693,
									"end": 720,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 709,
									"end": 719,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 693,
									"end": 720,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 731,
									"end": 770,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 731,
									"end": 770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 758,
									"end": 768,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3104,
									"end": 3195,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 758,
									"end": 768,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 758,
									"end": 768,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 752,
									"end": 768,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 752,
									"end": 768,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 752,
									"end": 754,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 752,
									"end": 768,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 752,
									"end": 768,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 752,
									"end": 768,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 752,
									"end": 768,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 744,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 744,
									"end": 769,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 744,
									"end": 748,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 744,
									"end": 769,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 744,
									"end": 769,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 744,
									"end": 769,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 744,
									"end": 769,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 731,
									"end": 736,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 731,
									"end": 770,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 731,
									"end": 770,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 731,
									"end": 770,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 805,
									"end": 821,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 805,
									"end": 807,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 805,
									"end": 821,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 805,
									"end": 821,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 805,
									"end": 821,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 805,
									"end": 821,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 795,
									"end": 822,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 795,
									"end": 822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 795,
									"end": 801,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 795,
									"end": 822,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 795,
									"end": 822,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 795,
									"end": 822,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 795,
									"end": 822,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 781,
									"end": 792,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 781,
									"end": 822,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "89"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 838,
									"end": 1065,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 838,
									"end": 1065,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 695,
									"end": 699,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 695,
									"end": 699,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 973,
									"end": 979,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 951,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 951,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 951,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 951,
									"end": 968,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 951,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551654"
								},
								{
									"begin": 951,
									"end": 968,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 951,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 951,
									"end": 970,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 951,
									"end": 970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 951,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 951,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 951,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 951,
									"end": 979,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 951,
									"end": 979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 951,
									"end": 979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 951,
									"end": 979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 951,
									"end": 979,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 951,
									"end": 979,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 951,
									"end": 988,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 951,
									"end": 988,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5355,
									"end": 5357,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5337,
									"end": 5358,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5396,
									"name": "PUSH",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5367,
									"end": 5397,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5460,
									"name": "PUSH",
									"source": 7,
									"value": "45524332304361707065643A2063617020657863656564656400000000000000"
								},
								{
									"begin": 5413,
									"end": 5431,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5413,
									"end": 5431,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5431,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5406,
									"end": 5461,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5478,
									"end": 5496,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5478,
									"end": 5496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5153,
									"end": 5502,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 943,
									"end": 1018,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1029,
									"end": 1057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1041,
									"end": 1048,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1050,
									"end": 1056,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1029,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1029,
									"end": 1040,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1029,
									"end": 1040,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1029,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551707"
								},
								{
									"begin": 1029,
									"end": 1040,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1029,
									"end": 1057,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1029,
									"end": 1057,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1029,
									"end": 1057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1029,
									"end": 1057,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 1029,
									"end": 1057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 838,
									"end": 1065,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 838,
									"end": 1065,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 838,
									"end": 1065,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3255,
									"end": 3361,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3255,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3342,
									"end": 3354,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3342,
									"end": 3354,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3342,
									"end": 3354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3255,
									"end": 3361,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 759,
									"end": 963,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 759,
									"end": 963,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 695,
									"end": 699,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 695,
									"end": 699,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 873,
									"end": 879,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 851,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 851,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 851,
									"end": 868,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 851,
									"end": 868,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 851,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551654"
								},
								{
									"begin": 851,
									"end": 868,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 851,
									"end": 870,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 851,
									"end": 870,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 851,
									"end": 870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 851,
									"end": 870,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 851,
									"end": 870,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 851,
									"end": 879,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 851,
									"end": 879,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 851,
									"end": 879,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 851,
									"end": 879,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 851,
									"end": 879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 851,
									"end": 879,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 851,
									"end": 879,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 851,
									"end": 888,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 851,
									"end": 888,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5355,
									"end": 5357,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5337,
									"end": 5358,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5396,
									"name": "PUSH",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5374,
									"end": 5392,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5367,
									"end": 5397,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5460,
									"name": "PUSH",
									"source": 7,
									"value": "45524332304361707065643A2063617020657863656564656400000000000000"
								},
								{
									"begin": 5413,
									"end": 5431,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5413,
									"end": 5431,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5431,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5406,
									"end": 5461,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5478,
									"end": 5496,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5478,
									"end": 5496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 5153,
									"end": 5502,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 843,
									"end": 918,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 940,
									"end": 947,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 928,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 928,
									"end": 939,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 928,
									"end": 939,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 928,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551708"
								},
								{
									"begin": 928,
									"end": 939,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 928,
									"end": 956,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 928,
									"end": 956,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 928,
									"end": 956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5709,
									"end": 5711,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5691,
									"end": 5712,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5748,
									"end": 5750,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5728,
									"end": 5746,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5751,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5787,
									"end": 5820,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 5767,
									"end": 5785,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5767,
									"end": 5785,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5785,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5760,
									"end": 5821,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5838,
									"end": 5856,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5838,
									"end": 5856,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 5507,
									"end": 5862,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 8700,
									"end": 8701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8704,
									"end": 8711,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 8671,
									"end": 8720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6038,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6013,
									"end": 6038,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6013,
									"end": 6038,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5986,
									"end": 6004,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 838,
									"end": 1065,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 838,
									"end": 1065,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 838,
									"end": 1065,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1171,
									"end": 1510,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 1171,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1300,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 1282,
									"end": 1324,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1324,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1304,
									"end": 1324,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1310,
									"end": 1324,
									"name": "COINBASE",
									"source": 0
								},
								{
									"begin": 1304,
									"end": 1324,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1304,
									"end": 1324,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1324,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 1282,
									"end": 1324,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1356,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 1282,
									"end": 1356,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1328,
									"end": 1342,
									"name": "COINBASE",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1356,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1356,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1356,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 1282,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1402,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1402,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 1282,
									"end": 1402,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 695,
									"end": 699,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 695,
									"end": 699,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1382,
									"end": 1393,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1382,
									"end": 1393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 1360,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1360,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1377,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1377,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551654"
								},
								{
									"begin": 1360,
									"end": 1377,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 1360,
									"end": 1393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 1360,
									"end": 1393,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1402,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1360,
									"end": 1402,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1282,
									"end": 1402,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 1282,
									"end": 1402,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1449,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1279,
									"end": 1449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 1449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1419,
									"end": 1437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1419,
									"end": 1435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 1419,
									"end": 1437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1419,
									"end": 1437,
									"name": "tag",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1419,
									"end": 1437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 1486,
									"end": 1490,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1492,
									"end": 1494,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1496,
									"end": 1501,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 1459,
									"end": 1485,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1459,
									"end": 1485,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 1459,
									"end": 1485,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1502,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1459,
									"end": 1502,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1502,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1459,
									"end": 1502,
									"name": "tag",
									"source": 0,
									"value": "75"
								},
								{
									"begin": 1459,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1171,
									"end": 1510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1171,
									"end": 1510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1171,
									"end": 1510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1171,
									"end": 1510,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1163,
									"name": "tag",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 1073,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 1127,
									"end": 1141,
									"name": "COINBASE",
									"source": 0
								},
								{
									"begin": 1143,
									"end": 1154,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1143,
									"end": 1154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1155,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1121,
									"end": 1155,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1155,
									"name": "tag",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 1121,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 259,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 259,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 99,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 101,
									"end": 107,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 154,
									"end": 156,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 151,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 133,
									"end": 140,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 129,
									"end": 152,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 125,
									"end": 157,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 122,
									"end": 174,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 122,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 170,
									"end": 171,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 168,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 160,
									"end": 172,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 122,
									"end": 174,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 122,
									"end": 174,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 193,
									"end": 209,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 193,
									"end": 209,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 249,
									"end": 251,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 234,
									"end": 252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 234,
									"end": 252,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 234,
									"end": 252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 228,
									"end": 253,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 193,
									"end": 209,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 228,
									"end": 253,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 228,
									"end": 253,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 264,
									"end": 391,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 264,
									"end": 391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 325,
									"end": 335,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 320,
									"end": 323,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 316,
									"end": 336,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 313,
									"end": 314,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 356,
									"end": 360,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 346,
									"end": 361,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 380,
									"end": 384,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 377,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 385,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 396,
									"end": 818,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 485,
									"end": 486,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 528,
									"end": 533,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 485,
									"end": 486,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 542,
									"end": 812,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 542,
									"end": 812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 563,
									"end": 570,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 553,
									"end": 561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 550,
									"end": 571,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 542,
									"end": 812,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 542,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 542,
									"end": 812,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 622,
									"end": 626,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 618,
									"end": 619,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 614,
									"end": 620,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 610,
									"end": 627,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 604,
									"end": 608,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 601,
									"end": 628,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 598,
									"end": 651,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 598,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 598,
									"end": 651,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 631,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 631,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 631,
									"end": 649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 631,
									"end": 649,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 631,
									"end": 649,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 681,
									"end": 688,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 671,
									"end": 679,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 667,
									"end": 689,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 664,
									"end": 719,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 664,
									"end": 719,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 664,
									"end": 719,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 701,
									"end": 717,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 701,
									"end": 717,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 701,
									"end": 717,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 701,
									"end": 717,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 664,
									"end": 719,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 664,
									"end": 719,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 780,
									"end": 802,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 780,
									"end": 802,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 780,
									"end": 802,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 780,
									"end": 802,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 740,
									"end": 755,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 740,
									"end": 755,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 740,
									"end": 755,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 740,
									"end": 755,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 542,
									"end": 812,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 542,
									"end": 812,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 542,
									"end": 812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 546,
									"end": 549,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 396,
									"end": 818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 872,
									"end": 877,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 910,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 892,
									"end": 972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 892,
									"end": 972,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 943,
									"end": 944,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 957,
									"end": 962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 957,
									"end": 962,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 892,
									"end": 972,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 892,
									"end": 972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 991,
									"end": 995,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 981,
									"end": 1057,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1028,
									"end": 1029,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1042,
									"end": 1047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1042,
									"end": 1047,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1057,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 981,
									"end": 1057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1073,
									"end": 1077,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1092,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1086,
									"end": 1145,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1086,
									"end": 1145,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1086,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1086,
									"end": 1145,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1154,
									"end": 1284,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1154,
									"end": 1284,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1154,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1154,
									"end": 1284,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1066,
									"end": 1284,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1086,
									"end": 1145,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1086,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1116,
									"end": 1117,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1117,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1130,
									"end": 1135,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1154,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1154,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1194,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1181,
									"end": 1189,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1178,
									"end": 1195,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1218,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1175,
									"end": 1218,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1198,
									"end": 1216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1254,
									"end": 1255,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1240,
									"end": 1256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1240,
									"end": 1256,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1269,
									"end": 1274,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1066,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1284,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1370,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1358,
									"end": 1366,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1371,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1349,
									"end": 1352,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1343,
									"end": 1347,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1353,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1372,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1332,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 1320,
									"end": 1328,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1317,
									"end": 1333,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1312,
									"end": 1314,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1306,
									"end": 1310,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1315,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1334,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1373,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1452,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1293,
									"end": 1452,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1424,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1424,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1405,
									"end": 1424,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1437,
									"end": 1442,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1452,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 1293,
									"end": 1452,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1509,
									"end": 1517,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1503,
									"end": 1507,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 1484,
									"end": 1518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1518,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 1484,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1560,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1546,
									"end": 1552,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1542,
									"end": 1561,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1533,
									"end": 1540,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1530,
									"end": 1562,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1585,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1527,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1527,
									"end": 1585,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1565,
									"end": 1583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1565,
									"end": 1583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1565,
									"end": 1583,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 1565,
									"end": 1583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1623,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1623,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 823,
									"end": 1629,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 823,
									"end": 1629,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 1774,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1634,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1692,
									"end": 1697,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 1762,
									"end": 1766,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1752,
									"end": 1760,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1748,
									"end": 1767,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1742,
									"end": 1746,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 1721,
									"end": 1768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1721,
									"end": 1768,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 1721,
									"end": 1768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1712,
									"end": 1768,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 1774,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1634,
									"end": 1774,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1947,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1779,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1852,
									"end": 1861,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1852,
									"end": 1861,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1852,
									"end": 1861,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1883,
									"end": 1892,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1883,
									"end": 1892,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1915,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1916,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1894,
									"end": 1916,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1880,
									"end": 1917,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1870,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1870,
									"end": 1941,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1921,
									"end": 1939,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 1921,
									"end": 1939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1952,
									"end": 2079,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 1952,
									"end": 2079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2013,
									"end": 2023,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2008,
									"end": 2011,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2004,
									"end": 2024,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2001,
									"end": 2002,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1994,
									"end": 2025,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2048,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2041,
									"end": 2042,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2034,
									"end": 2049,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2068,
									"end": 2072,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2065,
									"end": 2066,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2058,
									"end": 2073,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2464,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2084,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2164,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2159,
									"end": 2171,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2171,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2171,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2171,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2218,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2218,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2206,
									"end": 2218,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2227,
									"end": 2288,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2273,
									"end": 2279,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2286,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2259,
									"end": 2286,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2259,
									"end": 2286,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2288,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2227,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2336,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2326,
									"end": 2332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2337,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2321,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2338,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 2297,
									"end": 2458,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2390,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2375,
									"end": 2378,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2371,
									"end": 2391,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2369,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2361,
									"end": 2392,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2419,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2405,
									"end": 2420,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2447,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2440,
									"end": 2441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2448,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2458,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 2297,
									"end": 2458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2458,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2464,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2084,
									"end": 2464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2595,
									"end": 3140,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 2595,
									"end": 3140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2697,
									"end": 2699,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2692,
									"end": 2695,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2689,
									"end": 2700,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2686,
									"end": 3134,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2686,
									"end": 3134,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2686,
									"end": 3134,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2758,
									"end": 2763,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2754,
									"end": 2756,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2747,
									"end": 2764,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2803,
									"end": 2807,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2789,
									"end": 2808,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2873,
									"end": 2875,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2861,
									"end": 2871,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2854,
									"end": 2855,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2850,
									"end": 2877,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2848,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2840,
									"end": 2878,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2909,
									"end": 2913,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2897,
									"end": 2907,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2894,
									"end": 2914,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2938,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2938,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 2891,
									"end": 2938,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2936,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2938,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 2891,
									"end": 2938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2987,
									"end": 2989,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2982,
									"end": 2985,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2978,
									"end": 2990,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2975,
									"end": 2976,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2971,
									"end": 2991,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2969,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 2992,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 2992,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 2992,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3060,
									"end": 3062,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3053,
									"end": 3058,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3063,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3122,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3122,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3122,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3086,
									"end": 3087,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3075,
									"end": 3088,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3042,
									"end": 3124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3046,
									"end": 3049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3046,
									"end": 3049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3046,
									"end": 3049,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2595,
									"end": 3140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2595,
									"end": 3140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2595,
									"end": 3140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2595,
									"end": 3140,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3316,
									"end": 4668,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3316,
									"end": 4668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3446,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3446,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3458,
									"end": 3488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3488,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3511,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3511,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3455,
									"end": 3511,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3491,
									"end": 3509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3491,
									"end": 3509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 3610,
									"end": 3616,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3570,
									"end": 3608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3602,
									"end": 3606,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3596,
									"end": 3607,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3570,
									"end": 3608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 3570,
									"end": 3608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3570,
									"end": 3608,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3570,
									"end": 3608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3564,
									"end": 3568,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3617,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3520,
									"end": 3617,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3520,
									"end": 3617,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 3520,
									"end": 3617,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3672,
									"end": 3676,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3672,
									"end": 3676,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3736,
									"end": 3738,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3725,
									"end": 3739,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3725,
									"end": 3739,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3754,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3748,
									"end": 4411,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3748,
									"end": 4411,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3748,
									"end": 4411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 3748,
									"end": 4411,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4455,
									"end": 4456,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4472,
									"end": 4478,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4469,
									"end": 4558,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4469,
									"end": 4558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4469,
									"end": 4558,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4524,
									"end": 4543,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4543,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4518,
									"end": 4544,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4469,
									"end": 4558,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4469,
									"end": 4558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3269,
									"end": 3280,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3280,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3280,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3265,
									"end": 3289,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3290,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3291,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3293,
									"end": 3304,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3293,
									"end": 3304,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3293,
									"end": 3304,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3305,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4571,
									"end": 4652,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4571,
									"end": 4652,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3718,
									"end": 4662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3718,
									"end": 4662,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3748,
									"end": 4411,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 3748,
									"end": 4411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2542,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2535,
									"end": 2549,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2549,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2535,
									"end": 2549,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2583,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2566,
									"end": 2584,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3804,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3784,
									"end": 3804,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3784,
									"end": 3804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3916,
									"end": 3923,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3913,
									"end": 3914,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3910,
									"end": 3924,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4024,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4024,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4024,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4025,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3984,
									"end": 4026,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3984,
									"end": 4026,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4097,
									"end": 4124,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4097,
									"end": 4124,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4097,
									"end": 4124,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4097,
									"end": 4124,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4066,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4053,
									"end": 4067,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4053,
									"end": 4067,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4053,
									"end": 4067,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4053,
									"end": 4067,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3932,
									"end": 3951,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3932,
									"end": 3951,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 3902,
									"end": 4138,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4166,
									"end": 4172,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4157,
									"end": 4164,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4154,
									"end": 4173,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4352,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4151,
									"end": 4352,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4246,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4246,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4246,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4221,
									"end": 4247,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4310,
									"end": 4311,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4306,
									"end": 4320,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4306,
									"end": 4320,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4306,
									"end": 4320,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4322,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 4302,
									"end": 4326,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4298,
									"end": 4335,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4294,
									"end": 4336,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4279,
									"end": 4337,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4264,
									"end": 4338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4264,
									"end": 4338,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4352,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4151,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4398,
									"end": 4399,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4382,
									"end": 4396,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4382,
									"end": 4396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4382,
									"end": 4396,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4378,
									"end": 4400,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4401,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4401,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3316,
									"end": 4668,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5023,
									"end": 5148,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5023,
									"end": 5148,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5097,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5097,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5097,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5109,
									"end": 5119,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5109,
									"end": 5119,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5109,
									"end": 5119,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5142,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 5106,
									"end": 5142,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5122,
									"end": 5140,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 5122,
									"end": 5140,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 5122,
									"end": 5140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5867,
									"end": 6044,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 5867,
									"end": 6044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 1772,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5da1a0032d328a2e7d1ff568161da880bf72cf2eebe9b5a1065b5ba1a36490364736f6c63430008110033",
									".code": [
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "1A18E707"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "1A18E707"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "355274EA"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "AC168A1"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 1772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 544,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 544,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 544,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 544,
											"end": 570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 544,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 544,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1518,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2038,
											"end": 2074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1896,
											"end": 2080,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 625,
											"end": 706,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 625,
											"end": 706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 625,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 625,
											"end": 706,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 509,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 509,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 509,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 509,
											"end": 537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 509,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 509,
											"end": 537,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 509,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2488,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2495,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1698,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3393,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3364,
											"end": 3394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3464,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C20746869732066756E"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3410,
											"end": 3428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3474,
											"end": 3509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3526,
											"end": 3545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1680,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1610,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1610,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1610,
											"end": 1626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1610,
											"end": 1626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1610,
											"end": 1626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1600,
											"end": 1627,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 1627,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1600,
											"end": 1627,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1586,
											"end": 1627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1518,
											"end": 1635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 633,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 633,
											"end": 660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1049,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1105,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5588,
											"end": 5618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5654,
											"end": 5688,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5705,
											"end": 5723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 5733,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5750,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5750,
											"end": 5769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5374,
											"end": 5775,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 963,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 759,
											"end": 963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 851,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 851,
											"end": 870,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 851,
											"end": 870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 851,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 851,
											"end": 879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 851,
											"end": 879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 851,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 851,
											"end": 879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 851,
											"end": 879,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 851,
											"end": 879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 851,
											"end": 888,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 851,
											"end": 888,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 843,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 843,
											"end": 918,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 843,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 843,
											"end": 918,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 843,
											"end": 918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 843,
											"end": 918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 843,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 843,
											"end": 918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CC8C10D85C1C19590E8818D85C08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6088,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 843,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5780,
											"end": 6129,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 843,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 843,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 928,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 940,
											"end": 947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6339,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6375,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6378,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6414,
											"end": 6447,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6387,
											"end": 6448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6465,
											"end": 6483,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6134,
											"end": 6489,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8671,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 8731,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6678,
											"end": 6699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6809,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6825,
											"end": 6843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6852,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6869,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6869,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6494,
											"end": 6894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7103,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7104,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7140,
											"end": 7142,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7120,
											"end": 7138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7143,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7179,
											"end": 7213,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6899,
											"end": 7297,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7507,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7545,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 7523,
											"end": 7541,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7523,
											"end": 7541,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7613,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7555,
											"end": 7614,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7631,
											"end": 7649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7302,
											"end": 7655,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 7903,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7881,
											"end": 7899,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7881,
											"end": 7899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 7899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7940,
											"end": 7974,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 7920,
											"end": 7938,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7920,
											"end": 7938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7920,
											"end": 7938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 8019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8055,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8036,
											"end": 8055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 7660,
											"end": 8061,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8250,
											"end": 8271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8307,
											"end": 8309,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8380,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8381,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 8459,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8440,
											"end": 8459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8066,
											"end": 8465,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7697,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8672,
											"end": 8674,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8675,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8713,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8691,
											"end": 8709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8714,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8750,
											"end": 8784,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8794,
											"end": 8830,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8847,
											"end": 8866,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 8847,
											"end": 8866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8470,
											"end": 8872,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9079,
											"end": 9081,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9120,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9121,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9157,
											"end": 9191,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9192,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9201,
											"end": 9232,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9249,
											"end": 9268,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9249,
											"end": 9268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8877,
											"end": 9274,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9528,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9481,
											"end": 9483,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9484,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9493,
											"end": 9523,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9593,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9539,
											"end": 9557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9532,
											"end": 9594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 9279,
											"end": 9677,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1510,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1171,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1282,
											"end": 1324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1324,
											"name": "COINBASE",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1282,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1282,
											"end": 1356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "COINBASE",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1356,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1282,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1282,
											"end": 1402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1382,
											"end": 1393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1360,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1360,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1402,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1282,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1279,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "COINBASE",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1143,
											"end": 1154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1121,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1121,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 838,
											"end": 1065,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 838,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 695,
											"end": 699,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 699,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 951,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 951,
											"end": 979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 951,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 979,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 951,
											"end": 979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 988,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 951,
											"end": 988,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5984,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CC8C10D85C1C19590E8818D85C08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6088,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6105,
											"end": 6123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5780,
											"end": 6129,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 943,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1029,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1029,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1558,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1378,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1478,
											"end": 1487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1476,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1493,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1458,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1378,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1711,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1697,
											"end": 1706,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1695,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 1712,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1723,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1727,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1677,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1748,
											"end": 1777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1796,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1796,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1834,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1885,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2608,
											"end": 2615,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2627,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2632,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2649,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2597,
											"end": 2649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2646,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2643,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2647,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2597,
											"end": 2649,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 2597,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2668,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2739,
											"end": 2748,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2753,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2716,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2754,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2716,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2706,
											"end": 2754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 3145,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2765,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2899,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2887,
											"end": 2899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2908,
											"end": 2969,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2962,
											"end": 2966,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2969,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2908,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2984,
											"end": 3002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2978,
											"end": 3139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3071,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3056,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3052,
											"end": 3072,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3100,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3128,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3121,
											"end": 3122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3129,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3139,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2978,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 3145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 3145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 3145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2765,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3556,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3627,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3612,
											"end": 3615,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3652,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3645,
											"end": 3646,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3638,
											"end": 3653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3820,
											"end": 3825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3855,
											"end": 3862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3853,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3863,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3919,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3920,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3890,
											"end": 3943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3923,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3973,
											"end": 3980,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3963,
											"end": 3971,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3981,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3956,
											"end": 4011,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3956,
											"end": 4011,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3956,
											"end": 4011,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3956,
											"end": 4011,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3956,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4047,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3834,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3841,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 4110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4115,
											"end": 4921,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4115,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4184,
											"end": 4264,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4235,
											"end": 4236,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4249,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4249,
											"end": 4254,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4264,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 4184,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4273,
											"end": 4349,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4334,
											"end": 4339,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4273,
											"end": 4349,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4273,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4378,
											"end": 4437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4437,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4378,
											"end": 4437,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4446,
											"end": 4576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4576,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4446,
											"end": 4576,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4358,
											"end": 4576,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4437,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4378,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4399,
											"end": 4409,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4422,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4422,
											"end": 4427,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4576,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4446,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4486,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4473,
											"end": 4481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4487,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4510,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4467,
											"end": 4510,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4490,
											"end": 4508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4561,
											"end": 4566,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4576,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4358,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4662,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4650,
											"end": 4658,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4663,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4635,
											"end": 4639,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4645,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4624,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 4612,
											"end": 4620,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 4625,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4598,
											"end": 4602,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4607,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4626,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4665,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4744,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4585,
											"end": 4744,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4729,
											"end": 4734,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4744,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4585,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4801,
											"end": 4809,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 4799,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4776,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4810,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4776,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4852,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4844,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4853,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4854,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 4877,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4819,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4819,
											"end": 4877,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4857,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4915,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4915,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4115,
											"end": 4921,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4115,
											"end": 4921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4926,
											"end": 5066,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 4926,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 4989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5054,
											"end": 5058,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5044,
											"end": 5052,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5040,
											"end": 5059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5013,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5239,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5071,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5207,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5209,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5162,
											"end": 5233,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5213,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5369,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5244,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5340,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5327,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5327,
											"end": 5363,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5343,
											"end": 5361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/erc201.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockReward()": "0ac168a1",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"setBlockReward(uint256)": "1a18e707",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/erc201.sol\":\"Blank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/erc201.sol\":{\"keccak256\":\"0x7570a9a3994f3d1a3493ed511c1fa45fb97840425d3c5f12849666b3728d72ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f62e28195ddfa26e798b225eb0f22d7ea122b8fe564390b39bc1af74b9ea04\",\"dweb:/ipfs/QmPrUHfRUEAYVtjzTdBUtcNL5AvdE3rRcKMCo2BgoVvBqx\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x2832d5ad210d6cd042dbc4b7cb70a0e6e4f937b02ad1975085267e7f16f2d781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a84ebdc0fc82ec47bc4f2eb99724a877d3908fc8996792cb6a8bbb70c85494c\",\"dweb:/ipfs/QmPYk95TPmG9bS4Ux2z9xrkFF6yZDfYJq9iLhYBxpNkRan\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "contracts/erc201.sol:Blank",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 207,
								"contract": "contracts/erc201.sol:Blank",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 209,
								"contract": "contracts/erc201.sol:Blank",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "contracts/erc201.sol:Blank",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 213,
								"contract": "contracts/erc201.sol:Blank",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 902,
								"contract": "contracts/erc201.sol:Blank",
								"label": "_cap",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 10,
								"contract": "contracts/erc201.sol:Blank",
								"label": "owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address_payable"
							},
							{
								"astId": 12,
								"contract": "contracts/erc201.sol:Blank",
								"label": "blockReward",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":734:744  msg.sender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220d309e9ce68ea860b66518cd13cd774b0024850d9f63b4380e9ac40a6ef734a4364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_230": {
									"entryPoint": null,
									"id": 230,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:840:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:7"
															},
															"nodeType": "YulIf",
															"src": "1119:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:7"
															},
															"nodeType": "YulIf",
															"src": "1256:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:7"
															},
															"nodeType": "YulIf",
															"src": "1429:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													}
												],
												"src": "991:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:7"
															},
															"nodeType": "YulIf",
															"src": "1701:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:7"
															},
															"nodeType": "YulIf",
															"src": "1771:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:7",
														"type": ""
													}
												],
												"src": "1558:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:7",
														"type": ""
													}
												],
												"src": "1943:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:7",
																			"statements": []
																		},
																		"src": "2516:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:7"
															},
															"nodeType": "YulIf",
															"src": "2160:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:7",
														"type": ""
													}
												],
												"src": "2069:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:7",
														"type": ""
													}
												],
												"src": "2619:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:7"
															},
															"nodeType": "YulIf",
															"src": "2929:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:7",
																					"statements": []
																				},
																				"src": "3376:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:7",
														"type": ""
													}
												],
												"src": "2790:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220d309e9ce68ea860b66518cd13cd774b0024850d9f63b4380e9ac40a6ef734a4364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 MULMOD 0xE9 0xCE PUSH9 0xEA860B66518CD13CD7 PUSH21 0xB0024850D9F63B4380E9AC40A6EF734A4364736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:1;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:7:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:7;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:7;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:7;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:7;;;3992:26;3943:89;-1:-1:-1;;2747:1:7;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:7;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:7;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:7;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:7:o;:::-;1532:11312:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_771": {
									"entryPoint": null,
									"id": 771,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_706": {
									"entryPoint": 858,
									"id": 706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_760": {
									"entryPoint": null,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_996": {
									"entryPoint": null,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_749": {
									"entryPoint": 1150,
									"id": 749,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_532": {
									"entryPoint": 1272,
									"id": 532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_327": {
									"entryPoint": 815,
									"id": 327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_352": {
									"entryPoint": 562,
									"id": 352,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_284": {
									"entryPoint": null,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_260": {
									"entryPoint": null,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_455": {
									"entryPoint": 673,
									"id": 455,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_414": {
									"entryPoint": 624,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_240": {
									"entryPoint": 416,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_250": {
									"entryPoint": 658,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_270": {
									"entryPoint": null,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_385": {
									"entryPoint": 588,
									"id": 385,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_309": {
									"entryPoint": 801,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:548:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:7"
															},
															"nodeType": "YulIf",
															"src": "664:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:7",
														"type": ""
													}
												],
												"src": "567:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:7"
															},
															"nodeType": "YulIf",
															"src": "842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:7",
														"type": ""
													}
												],
												"src": "745:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:7",
														"type": ""
													}
												],
												"src": "1004:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:7",
														"type": ""
													}
												],
												"src": "1196:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:7"
															},
															"nodeType": "YulIf",
															"src": "1492:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:7",
														"type": ""
													}
												],
												"src": "1378:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:7",
														"type": ""
													}
												],
												"src": "1711:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:7"
															},
															"nodeType": "YulIf",
															"src": "1980:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:7",
														"type": ""
													}
												],
												"src": "1900:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:7"
															},
															"nodeType": "YulIf",
															"src": "2188:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:7",
														"type": ""
													}
												],
												"src": "2091:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:7"
															},
															"nodeType": "YulIf",
															"src": "2499:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:7"
															},
															"nodeType": "YulIf",
															"src": "2569:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:7",
														"type": ""
													}
												],
												"src": "2356:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:7"
															},
															"nodeType": "YulIf",
															"src": "2824:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:7",
														"type": ""
													}
												],
												"src": "2741:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:7",
														"type": ""
													}
												],
												"src": "2968:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:7",
														"type": ""
													}
												],
												"src": "3374:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:7",
														"type": ""
													}
												],
												"src": "3779:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:7",
														"type": ""
													}
												],
												"src": "4182:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:7",
														"type": ""
													}
												],
												"src": "4540:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:7",
														"type": ""
													}
												],
												"src": "4946:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:7",
														"type": ""
													}
												],
												"src": "5350:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220d309e9ce68ea860b66518cd13cd774b0024850d9f63b4380e9ac40a6ef734a4364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 MULMOD 0xE9 0xCE PUSH9 0xEA860B66518CD13CD7 PUSH21 0xB0024850D9F63B4380E9AC40A6EF734A4364736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:7;;1162:22;1144:41;;1132:2;1117:18;4444:197:1;1004:187:7;3255:106:1;3342:12;;3255:106;;;1342:25:7;;;1330:2;1315:18;3255:106:1;1196:177:7;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:7;;1841:2;1826:18;3104:91:1;1711:184:7;5854:234:1;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:6;4581:32:1;734:10:6;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;734:10:6;5356:38:1;5372:4;734:10:6;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;734:10:6;5996:64:1;734:10:6;6012:7:1;6049:10;6021:25;734:10:6;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;734:10:6;6668:4:1;6749:25;734:10:6;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;3170:2:7;6784:85:1;;;3152:21:7;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:7;;;3292:35;3344:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:6;3873:28:1;734:10:6;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;3576:2:7;10550:68:1;;;3558:21:7;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:7;;;3698:34;3749:19;;10550:68:1;3374:400:7;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;3981:2:7;10628:68:1;;;3963:21:7;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:7;;;4103:32;4152:19;;10628:68:1;3779:398:7;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:7;;;10758:32:1;;1315:18:7;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;4384:2:7;11297:68:1;;;4366:21:7;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:1;4182:353:7;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;4742:2:7;7544:68:1;;;4724:21:7;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:7;;;4864:35;4916:19;;7544:68:1;4540:401:7;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;5148:2:7;7622:64:1;;;5130:21:7;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:7;;;5270:33;5320:19;;7622:64:1;4946:399:7;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;5552:2:7;7793:72:1;;;5534:21:7;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:7;;;5674:36;5727:19;;7793:72:1;5350:402:7;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:7;;;8114:13:1;;8163:26;;1315:18:7;8163:26:1;;;;;;;8200:37;12073:91;14:548:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:7;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:7:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:7:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22528",
								"balanceOf(address)": "1262",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "23616",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44338",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d309e9ce68ea860b66518cd13cd774b0024850d9f63b4380e9ac40a6ef734a4364736f6c63430008110033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/erc201.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 207,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 209,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 213,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 207,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 209,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 213,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x2832d5ad210d6cd042dbc4b7cb70a0e6e4f937b02ad1975085267e7f16f2d781\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a84ebdc0fc82ec47bc4f2eb99724a877d3908fc8996792cb6a8bbb70c85494c\",\"dweb:/ipfs/QmPYk95TPmG9bS4Ux2z9xrkFF6yZDfYJq9iLhYBxpNkRan\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 207,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 209,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 213,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 902,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_cap",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/erc201.sol": {
				"ast": {
					"absolutePath": "contracts/erc201.sol",
					"exportedSymbols": {
						"Blank": [
							185
						],
						"Context": [
							1014
						],
						"ERC20": [
							772
						],
						"ERC20Burnable": [
							894
						],
						"ERC20Capped": [
							959
						],
						"IERC20": [
							850
						],
						"IERC20Metadata": [
							984
						]
					},
					"id": 186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "61:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 773,
							"src": "89:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 960,
							"src": "199:125:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 895,
							"src": "326:127:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC20Capped",
										"nameLocations": [
											"475:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 959,
										"src": "475:11:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "475:11:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ERC20Burnable",
										"nameLocations": [
											"488:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 894,
										"src": "488:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "488:13:0"
								}
							],
							"canonicalName": "Blank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185,
								894,
								959,
								772,
								984,
								850,
								1014
							],
							"name": "Blank",
							"nameLocation": "466:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 10,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "532:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "509:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "509:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0ac168a1",
									"id": 12,
									"mutability": "mutable",
									"name": "blockReward",
									"nameLocation": "559:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "544:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "544:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "682:148:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "693:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 35,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "709:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "713:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "709:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "701:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 33,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "701:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "701:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "693:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "693:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 41,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "737:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "744:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 43,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "752:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 44,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "758:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "758:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "752:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 47,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "751:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "744:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 40,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92
														],
														"referencedDeclaration": 92,
														"src": "731:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "731:39:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "blockReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "781:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 52,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "805:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 54,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "811:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "811:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "805:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 57,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "804:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "795:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "781:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "781:41:0"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e616d65",
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "626:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_55e49609591f684ecf6f2909c9e20c2439b990887b9c3fe108b154c9077d85cf",
														"typeString": "literal_string \"Name\""
													},
													"value": "Name"
												},
												{
													"hexValue": "53796d626f6c",
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "634:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_eb2b5c8b692584f3a11547b77c8737349554239478f5297be355477ebb6c9c23",
														"typeString": "literal_string \"Symbol\""
													},
													"value": "Symbol"
												}
											],
											"id": 21,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 18,
												"name": "ERC20",
												"nameLocations": [
													"620:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "620:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "620:23:0"
										},
										{
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "656:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "663:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 25,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "669:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "669:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "663:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 28,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "662:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "656:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 30,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 22,
												"name": "ERC20Capped",
												"nameLocations": [
													"644:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 959,
												"src": "644:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "644:37:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "599:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "591:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "612:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "604:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:29:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:0:0"
									},
									"scope": 185,
									"src": "579:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										589,
										958
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "932:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 73,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "951:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$772_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 74,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "957:11:0",
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 270,
																		"src": "951:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "951:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 76,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "973:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "951:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 78,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "983:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "983:5:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "951:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "990:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "943:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "943:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 88,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 84,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1029:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Blank_$185_$",
																"typeString": "type(contract super Blank)"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1035:5:0",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "1029:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1029:28:0"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "847:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 70,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 68,
												"name": "ERC20Capped",
												"nameLocations": [
													"912:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 959,
												"src": "912:11:0"
											},
											{
												"id": 69,
												"name": "ERC20",
												"nameLocations": [
													"925:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 772,
												"src": "925:5:0"
											}
										],
										"src": "903:28:0"
									},
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "878:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "870:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:33:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:0"
									},
									"scope": 185,
									"src": "838:227:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1110:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 96,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1127:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1133:8:0",
															"memberName": "coinbase",
															"nodeType": "MemberAccess",
															"src": "1127:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 98,
															"name": "blockReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1143:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 95,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92
														],
														"referencedDeclaration": 92,
														"src": "1121:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1121:34:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintMinerReward",
									"nameLocation": "1082:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:0"
									},
									"scope": 185,
									"src": "1073:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										760
									],
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1268:242:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 112,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "1282:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1298:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1290:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 113,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1290:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1290:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1282:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 118,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "1304:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 119,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1310:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1316:8:0",
																	"memberName": "coinbase",
																	"nodeType": "MemberAccess",
																	"src": "1310:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1304:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1282:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 123,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1328:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1334:8:0",
																"memberName": "coinbase",
																"nodeType": "MemberAccess",
																"src": "1328:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1354:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1346:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1346:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1346:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1328:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1282:74:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 131,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "1360:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$772_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1366:11:0",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "1360:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1360:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 134,
																"name": "blockReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1382:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1360:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 136,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "1397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1397:5:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1360:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1282:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "IfStatement",
												"src": "1279:170:0",
												"trueBody": {
													"id": 143,
													"nodeType": "Block",
													"src": "1404:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 140,
																	"name": "_mintMinerReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "1419:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1419:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 142,
															"nodeType": "ExpressionStatement",
															"src": "1419:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 148,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "1486:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 149,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "1492:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "1496:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 145,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Blank_$185_$",
																"typeString": "type(contract super Blank)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1465:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1459:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1459:43:0"
											}
										]
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1180:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 110,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1259:8:0"
									},
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1209:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1201:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1223:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1215:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:41:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:0:0"
									},
									"scope": 185,
									"src": "1171:339:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1575:60:0",
										"statements": [
											{
												"expression": {
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "blockReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1586:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 162,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1600:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1610:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 164,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "1616:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1616:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1610:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 167,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1609:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1600:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1586:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1586:41:0"
											}
										]
									},
									"functionSelector": "1a18e707",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyOwner",
												"nameLocations": [
													"1565:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 184,
												"src": "1565:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1565:9:0"
										}
									],
									"name": "setBlockReward",
									"nameLocation": "1527:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1550:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:16:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1575:0:0"
									},
									"scope": 185,
									"src": "1518:117:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1669:100:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 175,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1688:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1692:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 177,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1702:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1688:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1709:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															},
															"value": "Only the owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c4ea565ba5dd10ca7507fa4aece08fe60d2b6b945dff193cdbce1647b7face",
																"typeString": "literal_string \"Only the owner can call this function\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1680:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1680:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "1680:69:0"
											},
											{
												"id": 182,
												"nodeType": "PlaceholderStatement",
												"src": "1760:1:0"
											}
										]
									},
									"id": 184,
									"name": "onlyOwner",
									"nameLocation": "1659:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:0:0"
									},
									"src": "1650:119:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 186,
							"src": "457:1315:0",
							"usedErrors": []
						}
					],
					"src": "61:1713:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1014
						],
						"ERC20": [
							772
						],
						"IERC20": [
							850
						],
						"IERC20Metadata": [
							984
						]
					},
					"id": 773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 773,
							"sourceUnit": 851,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 773,
							"sourceUnit": 985,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 773,
							"sourceUnit": 1015,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 192,
										"name": "Context",
										"nameLocations": [
											"1550:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1550:7:1"
									},
									"id": 193,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:1"
								},
								{
									"baseName": {
										"id": 194,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "1559:6:1"
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:1"
								},
								{
									"baseName": {
										"id": 196,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 984,
										"src": "1567:14:1"
									},
									"id": 197,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 191,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 772,
							"linearizedBaseContracts": [
								772,
								984,
								850,
								1014
							],
							"name": "ERC20",
							"nameLocation": "1541:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "1588:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 200,
										"keyType": {
											"id": 198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 199,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "1640:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 206,
										"keyType": {
											"id": 202,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 205,
											"keyType": {
												"id": 203,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 209,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "1714:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "1749:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 210,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 213,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 772,
									"src": "1775:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 212,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "2036:57:1",
										"statements": [
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2046:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 222,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2054:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:1"
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 225,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "2079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 230,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1992:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "2013:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:1"
									},
									"scope": 772,
									"src": "1980:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										971
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2227:29:1",
										"statements": [
											{
												"expression": {
													"id": 237,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 211,
													"src": "2244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "2237:12:1"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:1"
									},
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2212:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:1"
									},
									"scope": 772,
									"src": "2158:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										977
									],
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2440:31:1",
										"statements": [
											{
												"expression": {
													"id": 247,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 246,
												"id": 248,
												"nodeType": "Return",
												"src": "2450:14:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:1"
									},
									"scope": 772,
									"src": "2369:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										983
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "3169:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 256,
												"id": 258,
												"nodeType": "Return",
												"src": "3179:9:1"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3162:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 254,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:1"
									},
									"scope": 772,
									"src": "3104:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										799
									],
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3325:36:1",
										"statements": [
											{
												"expression": {
													"id": 267,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 209,
													"src": "3342:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 268,
												"nodeType": "Return",
												"src": "3335:19:1"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 263,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:1"
									},
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:1"
									},
									"scope": 772,
									"src": "3255:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										807
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "3502:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 279,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3519:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 281,
													"indexExpression": {
														"id": 280,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 282,
												"nodeType": "Return",
												"src": "3512:25:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 275,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:1"
									},
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:1"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:1"
									},
									"scope": 772,
									"src": "3419:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										817
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3825:104:1",
										"statements": [
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 308,
														"src": "3835:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 295,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 297,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3851:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "3883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "3890:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 300,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "3873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 294,
												"id": 307,
												"nodeType": "Return",
												"src": "3911:11:1"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:1"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3758:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:1"
									},
									"scope": 772,
									"src": "3740:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										827
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4085:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 320,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4102:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 322,
														"indexExpression": {
															"id": 321,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 324,
													"indexExpression": {
														"id": 323,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "4121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 319,
												"id": 325,
												"nodeType": "Return",
												"src": "4095:34:1"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 316,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:1"
									},
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4006:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4076:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:1"
									},
									"scope": 772,
									"src": "3987:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										837
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "4533:108:1",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "4543:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 338,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 340,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "4559:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4590:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "4581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 337,
												"id": 350,
												"nodeType": "Return",
												"src": "4623:11:1"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:1"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4461:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4478:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4527:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:1"
									},
									"scope": 772,
									"src": "4444:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										849
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "5306:153:1",
										"statements": [
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "5316:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 365,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 367,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "5334:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5372:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 373,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5387:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 370,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "5356:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 377,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "5414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5420:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5424:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5404:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "5441:11:1"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:1"
									},
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5225:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5239:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:1"
									},
									"scope": 772,
									"src": "5203:256:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "5948:140:1",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "5958:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "5974:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6005:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "6012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 404,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "6031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 405,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "6038:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 403,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6021:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 407,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "6049:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "5996:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 412,
												"nodeType": "Return",
												"src": "6070:11:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5881:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5898:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:1"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "5942:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:1"
									},
									"scope": 772,
									"src": "5854:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "6674:328:1",
										"statements": [
											{
												"assignments": [
													425
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "6684:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 424,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 426,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "6700:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:1"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 454,
														"src": "6722:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "6759:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "6766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 431,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "6749:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "6792:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "6812:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:1"
											},
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 444,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "6912:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 445,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "6919:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "6928:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 447,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "6947:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 443,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "6903:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 423,
												"id": 453,
												"nodeType": "Return",
												"src": "6984:11:1"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "6602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "6619:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:1"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 772,
									"src": "6575:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "7534:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "7630:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 477,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 486,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "7718:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "7724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "7728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "7697:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:1"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "7746:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"baseExpression": {
														"id": 493,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "7768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 495,
													"indexExpression": {
														"id": 494,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7778:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "7801:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 499,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "7816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:1"
											},
											{
												"id": 518,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:1",
												"statements": [
													{
														"expression": {
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 504,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "7899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 506,
																"indexExpression": {
																	"id": 505,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "7909:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "7917:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 508,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "7931:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 511,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:1"
													},
													{
														"expression": {
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 512,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "8114:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 514,
																"indexExpression": {
																	"id": 513,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "8124:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8131:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 517,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 520,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "8178:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8182:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 519,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "8163:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "EmitStatement",
												"src": "8158:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "8220:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "8226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8230:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "8200:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:1"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "7475:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "7489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "7501:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:1"
									},
									"scope": 772,
									"src": "7456:788:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8585:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "8603:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 542,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "8713:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "8671:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:1"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 559,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "8731:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 560,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "8747:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:1"
											},
											{
												"id": 569,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:1",
												"statements": [
													{
														"expression": {
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 563,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "8899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 565,
																"indexExpression": {
																	"id": 564,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "8909:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 566,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "8921:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 568,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "8973:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "8952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "8947:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "9032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "9041:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "9000:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:1"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8535:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8552:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:1"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:1"
									},
									"scope": 772,
									"src": "8520:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "9440:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 598,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "9458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 599,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9549:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "9570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9528:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:1"
											},
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "9588:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"baseExpression": {
														"id": 618,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "9613:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 620,
													"indexExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "9623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "9649:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 624,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "9667:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:1"
											},
											{
												"id": 641,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:1",
												"statements": [
													{
														"expression": {
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 629,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "9746:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 631,
																"indexExpression": {
																	"id": 630,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "9756:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 632,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "9767:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 633,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "9784:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 636,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:1"
													},
													{
														"expression": {
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 637,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "9883:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 638,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "9899:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 640,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "9961:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "9931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "9926:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 653,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "10020:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "9979:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:1"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "9390:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "9407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:1"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:1"
									},
									"scope": 772,
									"src": "9375:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "10540:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 672,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "10558:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 673,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 682,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "10636:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 683,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:1"
											},
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 691,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "10707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 694,
															"indexExpression": {
																"id": 692,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "10719:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 695,
														"indexExpression": {
															"id": 693,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "10726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 696,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "10737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 700,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "10767:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "10774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "10783:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "10758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "EmitStatement",
												"src": "10753:37:1"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "10475:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "10490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "10507:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:1"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:1"
									},
									"scope": 772,
									"src": "10457:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "11168:321:1",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "11178:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 719,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "11215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "11222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 718,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "11205:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "11244:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 725,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 724,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "11240:243:1",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "11283:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 731,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "11305:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 732,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "11325:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 730,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 736,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:1"
														},
														{
															"id": 745,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 738,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "11416:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 739,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 711,
																				"src": "11423:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 740,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "11432:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 741,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "11451:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 737,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "11407:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 744,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "11103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "11118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "11135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:1"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:1"
									},
									"scope": 772,
									"src": "11078:411:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "12162:2:1",
										"statements": []
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "12103:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "12117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "12129:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:1"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:1"
									},
									"scope": 772,
									"src": "12073:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "12840:2:1",
										"statements": []
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "12781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "12795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "12807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:1"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:1"
									},
									"scope": 772,
									"src": "12752:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 773,
							"src": "1532:11312:1",
							"usedErrors": []
						}
					],
					"src": "105:12740:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							850
						]
					},
					"id": 851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 775,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 850,
							"linearizedBaseContracts": [
								850
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 784,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 793,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 850,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 850,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 814,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 850,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 850,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 850,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 850,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 851,
							"src": "202:2534:2",
							"usedErrors": []
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1014
						],
						"ERC20": [
							772
						],
						"ERC20Burnable": [
							894
						],
						"IERC20": [
							850
						],
						"IERC20Metadata": [
							984
						]
					},
					"id": 895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 895,
							"sourceUnit": 773,
							"src": "149:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 895,
							"sourceUnit": 1015,
							"src": "172:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 856,
										"name": "Context",
										"nameLocations": [
											"454:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "454:7:3"
									},
									"id": 857,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:3"
								},
								{
									"baseName": {
										"id": 858,
										"name": "ERC20",
										"nameLocations": [
											"463:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "463:5:3"
									},
									"id": 859,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:3"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 855,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 894,
							"linearizedBaseContracts": [
								894,
								772,
								984,
								850,
								1014
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "623:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 866,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "639:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "653:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 865,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "633:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "633:27:3"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "592:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:3"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:3"
									},
									"scope": 894,
									"src": "578:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "1039:95:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "1065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "1074:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1049:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "1111:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "1120:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1105:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:3"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "991:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "1008:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:3"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:3"
									},
									"scope": 894,
									"src": "973:161:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 895,
							"src": "419:717:3",
							"usedErrors": []
						}
					],
					"src": "124:1013:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"Context": [
							1014
						],
						"ERC20": [
							772
						],
						"ERC20Capped": [
							959
						],
						"IERC20": [
							850
						],
						"IERC20Metadata": [
							984
						]
					},
					"id": 960,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 896,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 773,
							"src": "132:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 899,
										"name": "ERC20",
										"nameLocations": [
											"267:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "267:5:4"
									},
									"id": 900,
									"nodeType": "InheritanceSpecifier",
									"src": "267:5:4"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 898,
								"nodeType": "StructuredDocumentation",
								"src": "156:77:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": false,
							"id": 959,
							"linearizedBaseContracts": [
								959,
								772,
								984,
								850,
								1014
							],
							"name": "ERC20Capped",
							"nameLocation": "252:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 902,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "295:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "279:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 901,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "279:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "466:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "484:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "491:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "484:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a206361702069732030",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "494:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															},
															"value": "ERC20Capped: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "476:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "476:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "476:42:4"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 915,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "528:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 916,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "535:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "528:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "528:11:4"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "306:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 920,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "460:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "452:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:14:4"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:0:4"
									},
									"scope": 959,
									"src": "440:106:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "678:28:4",
										"statements": [
											{
												"expression": {
													"id": 926,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 902,
													"src": "695:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 925,
												"id": 927,
												"nodeType": "Return",
												"src": "688:11:4"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "552:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "634:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:2:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "669:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:9:4"
									},
									"scope": 959,
									"src": "625:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										589
									],
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "833:130:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 939,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "851:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$772_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "857:11:4",
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 270,
																		"src": "851:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "851:19:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 942,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "873:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "851:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 944,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "883:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:5:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "851:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "890:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "843:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "843:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "843:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 953,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "940:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "949:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 950,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$959_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "934:5:4",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 589,
														"src": "928:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "928:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "928:28:4"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "712:42:4",
										"text": " @dev See {ERC20-_mint}."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "768:5:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 936,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "824:8:4"
									},
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "799:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "791:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:33:4"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:0:4"
									},
									"scope": 959,
									"src": "759:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 960,
							"src": "234:731:4",
							"usedErrors": []
						}
					],
					"src": "107:859:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							850
						],
						"IERC20Metadata": [
							984
						]
					},
					"id": 985,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 961,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 985,
							"sourceUnit": 851,
							"src": "135:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 964,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "305:6:5"
									},
									"id": 965,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 963,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 984,
							"linearizedBaseContracts": [
								984,
								850
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 984,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 977,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 984,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 983,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 980,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 984,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 985,
							"src": "277:405:5",
							"usedErrors": []
						}
					],
					"src": "110:573:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.9.5/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 986,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 987,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014
							],
							"name": "Context",
							"nameLocation": "641:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "717:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 992,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 991,
												"id": 994,
												"nodeType": "Return",
												"src": "727:17:6"
											}
										]
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:6"
									},
									"scope": 1014,
									"src": "655:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "824:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1001,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1003,
												"nodeType": "Return",
												"src": "834:15:6"
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "808:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:6"
									},
									"scope": 1014,
									"src": "757:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "934:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1009,
												"id": 1011,
												"nodeType": "Return",
												"src": "944:8:6"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:6"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "925:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:6"
									},
									"scope": 1014,
									"src": "862:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1015,
							"src": "623:338:6",
							"usedErrors": []
						}
					],
					"src": "101:861:6"
				},
				"id": 6
			}
		}
	}
}